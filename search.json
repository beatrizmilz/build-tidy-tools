[
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Building tidy tools",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. __Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.t stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#the-team",
    "href": "materials/day-2-session-1-design.html#the-team",
    "title": "📦 Building tidy tools",
    "section": "The Team",
    "text": "The Team\n\n\nEmma Rand 🐦er13_r\nElliot Murphy\nBeatriz Milz\n\nIan Lyttle 🐦ijlyttle\nHaley Jeppson\nTed Laderas\n\n\nStanding on the shoulders of Building Tidy Tools, rstudio::conf(2020) (C. Wickham and Wickham 2021), R Packages (H. Wickham and Bryan 2020)"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#code-of-conduct",
    "href": "materials/day-2-session-1-design.html#code-of-conduct",
    "title": "📦 Building tidy tools",
    "section": "Code of conduct",
    "text": "Code of conduct"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#housekeeping",
    "href": "materials/day-2-session-1-design.html#housekeeping",
    "title": "📦 Building tidy tools",
    "section": "Housekeeping",
    "text": "Housekeeping\n\nToilets\nFire exits and alarms\nanything else?"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#how-we-will-work",
    "href": "materials/day-2-session-1-design.html#how-we-will-work",
    "title": "📦 Building tidy tools",
    "section": "How we will work",
    "text": "How we will work\n\nstickies\nno stupid questions"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#schedule",
    "href": "materials/day-2-session-1-design.html#schedule",
    "title": "📦 Building tidy tools",
    "section": "Schedule",
    "text": "Schedule\n\nFunction design\nWorking with side effects\nTidy Eval\nMiscellany"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#state-of-play",
    "href": "materials/day-2-session-1-design.html#state-of-play",
    "title": "📦 Building tidy tools",
    "section": "State of play",
    "text": "State of play\nWe want to concentrate on specific concepts, rather than writing entire functions.\nWe have created a set of checkpoints called states:\n\nbtt22::btt_state()\n\n [1] \"2.1.1\" \"2.1.2\" \"2.2.1\" \"2.2.2\" \"2.2.3\" \"2.3.1\" \"2.3.2\" \"2.3.3\" \"2.3.4\"\n[10] \"2.3.5\" \"2.3.6\" \"2.3.7\" \"2.4.1\" \"2.4.2\" \"2.4.3\"\n\n\nFor example, \"2.1.1\" means day 2, session 1, task 1."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#getting-new-files",
    "href": "materials/day-2-session-1-design.html#getting-new-files",
    "title": "📦 Building tidy tools",
    "section": "Getting new files",
    "text": "Getting new files\nTo get new files for a state:\n# \"2.1.1\": day 2, session 1, task 1\nbtt_get(\"2.1.1\")\n\n\nfiles to directories R, tests/testthat.\ncontains functions, tests that you will complete."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#staying-on-the-happy-path",
    "href": "materials/day-2-session-1-design.html#staying-on-the-happy-path",
    "title": "📦 Building tidy tools",
    "section": "Staying on the “happy path”",
    "text": "Staying on the “happy path”\nOne example builds on another, so it’s important to keep up.\n\nWe will do our best to help; in case you need to reset:\nbtt_reset_hard(\"2.1.1\")\n\n\nOverwrites:\n\ndirectories: R, tests/testthat\nImports, Suggests sections of DESCRIPTION"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#learning-objectives",
    "href": "materials/day-2-session-1-design.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning objectives",
    "text": "Learning objectives\nAt the end of this section you will be able to:\n\norder and name your function’s arguments.\nrecognize type-stable functions and their importance.\ndistinguish a pure function from a function that has or uses side effects.\n\nBut first…"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#make-r-cmd-check-happy",
    "href": "materials/day-2-session-1-design.html#make-r-cmd-check-happy",
    "title": "📦 Building tidy tools",
    "section": "Make R CMD CHECK happy",
    "text": "Make R CMD CHECK happy\nWhen we finished yesterday:\n> checking R code for possible problems ... NOTE\n  uss_make_matches: no visible binding for global variable ‘tier’\n  uss_make_matches: no visible binding for global variable ‘Season’\n  uss_make_matches: no visible binding for global variable ‘Date’\n  uss_make_matches: no visible binding for global variable ‘home’\n  uss_make_matches: no visible binding for global variable ‘visitor’\n  uss_make_matches: no visible binding for global variable ‘hgoal’\n  uss_make_matches: no visible binding for global variable ‘vgoal’\n  Undefined global functions or variables:\n    Date Season hgoal home tier vgoal visitor\n\n0 errors ✓ | 0 warnings ✓ | 1 note x\n\nWhere does tier, etc. come from?\n\n\n\nWe know it’s a column in a data frame, but R doesn’t know that.\nHow to specify “this comes from a data frame” ?"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#preview-of-tidy-eval",
    "href": "materials/day-2-session-1-design.html#preview-of-tidy-eval",
    "title": "📦 Building tidy tools",
    "section": "Preview of tidy eval",
    "text": "Preview of tidy eval\nThe {rlang} package provides pronouns.\n\nInteractively, we might write:\nmtcars |>\n  mutate(cons_lper100km = 235.215 / mpg)\n\n\nIn a package function, we would write:\nmtcars |>\n  dplyr::mutate(cons_lper100km = 235.215 / .data$mpg)"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#your-turn-2.1.1",
    "href": "materials/day-2-session-1-design.html#your-turn-2.1.1",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.1.1\"",
    "text": "Your turn \"2.1.1\"\n\nAdd the {rlang} package:\n\nusethis::use_package(\"rlang\")\n\nImport the .data pronoun:\n\n# adds to R/ussie-package.R\nusethis::use_import_from(\"rlang\", \".data\")\n\nR/matches.R: use .data in uss_make_matches().\ndevtools::check(), should be happy now."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#api-design",
    "href": "materials/day-2-session-1-design.html#api-design",
    "title": "📦 Building tidy tools",
    "section": "API design",
    "text": "API design\n\nA thing I like about tidyverse:\n\n\n\nthere should be a function to do this; it should look like this\n\n\n\n\nthere already is\n\n\n\nBecause:\n\nfunctions and arguments follow naming conventions\narguments are ordered according to purpose\nwe know what to expect for return values"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#evolving-references",
    "href": "materials/day-2-session-1-design.html#evolving-references",
    "title": "📦 Building tidy tools",
    "section": "Evolving references",
    "text": "Evolving references\nThe way we approach problems is always evolving; tidyverse is no exception:\n\n\nTidyverse Style Guide\n\n\n\n\nTidyverse Design Guide\n\n\n\n\nfollow the GitHub repo of your favorite tidyverse/r-lib package (mine is {usethis}):\n\nissue discussions\npull-request reviews"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#naming-functions",
    "href": "materials/day-2-session-1-design.html#naming-functions",
    "title": "📦 Building tidy tools",
    "section": "Naming functions",
    "text": "Naming functions\nIf writing a smaller package, consider prefixing your functions:\n\n{ussie}: uss_make_matches()\n{btt22}: btt_get()\n\n\nUse a verb next:\n\ndplyr::mutate(), stringr::str_split()\n\n\n\nUse a noun if building up a specific type of object:\n\nggplot2::ggplot(), ggplot2::geom_point()"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#casing",
    "href": "materials/day-2-session-1-design.html#casing",
    "title": "📦 Building tidy tools",
    "section": "Casing",
    "text": "Casing\n\nTidyverse uses snake_case\nPython prefers snake_case\nJavaScript prefers:\n\ncamelCase for functions\nPascalCase for classes, interfaces\n\n\n\nPick a convention according to your domain, follow it."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#arguments",
    "href": "materials/day-2-session-1-design.html#arguments",
    "title": "📦 Building tidy tools",
    "section": "Arguments",
    "text": "Arguments\nHere, mtcars is an argument:\nhead(mtcars)\n\nHere, data is a formal argument:\nhead <- function(data){\n  ...\n}\n\n\nIn R, we sometimes use these terms interchangeably; we sometimes use the term formals.\n\n\n¯\\_(ツ)_/¯"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#naming-arguments",
    "href": "materials/day-2-session-1-design.html#naming-arguments",
    "title": "📦 Building tidy tools",
    "section": "Naming arguments",
    "text": "Naming arguments\nLike naming functions, strive to be:\n\nconsistent\nevocative\nconcise\n\n\n\nThere are only two hard things in Computer Science: cache invalidation and naming things.\n– Phil Karlton\n\n\n\n\nAnd off-by-one errors – Leon Bambrick"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#ordering-arguments",
    "href": "materials/day-2-session-1-design.html#ordering-arguments",
    "title": "📦 Building tidy tools",
    "section": "Ordering arguments",
    "text": "Ordering arguments\n\ndata: first argument, “the thing”\ndescriptors: values the user should specify\ndots (...): stuff that gets passed to other functions\ndetails: values with defaults\n\n\nI have seen the order of dots and details reversed.\nHowever, data and descriptors almost always come first."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#discuss-with-neighbour",
    "href": "materials/day-2-session-1-design.html#discuss-with-neighbour",
    "title": "📦 Building tidy tools",
    "section": "Discuss with neighbour",
    "text": "Discuss with neighbour\nWhich are: data, descriptors, details?\n# there are acutally more args...\npivot_longer <- function(\n  data,                \n  cols,                \n  names_to = \"name\",   \n  names_prefix = NULL  \n) {\n  ...\n}"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#discuss-with-neighbor-answer",
    "href": "materials/day-2-session-1-design.html#discuss-with-neighbor-answer",
    "title": "📦 Building tidy tools",
    "section": "Discuss with neighbor (answer)",
    "text": "Discuss with neighbor (answer)\nWhich are: data, descriptors, details?\n# there are acutally more args...\npivot_longer <- function(\n  data,                # data\n  cols,                # descriptor\n  names_to = \"name\",   # details\n  names_prefix = NULL  #\n) {\n  ...\n}"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#return-value-type-stability",
    "href": "materials/day-2-session-1-design.html#return-value-type-stability",
    "title": "📦 Building tidy tools",
    "section": "Return value: type stability",
    "text": "Return value: type stability\nThis is a key to tidyverse.\n\nIn theory\nType of return-value depends only on the types of the inputs.\n\nno return_tibble = TRUE arguments.\n\nIn practice\n\nreturn same type as data (first) argument\nreturn constant type, e.g. double"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#putting-it-all-together",
    "href": "materials/day-2-session-1-design.html#putting-it-all-together",
    "title": "📦 Building tidy tools",
    "section": "Putting it all together",
    "text": "Putting it all together\nWhen I think of tidyverse functions, I can remember type for:\n\ndata (first) argument\nreturn value\n\n\nFor example:\n\ndplyr::mutate(): tibble -> tibble\ntidyr::pivot_longer(): tibble -> tibble\n\n\n\ntibble -> tibble pattern makes it easy to work with the pipe: |>"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#our-turn-2.1.2",
    "href": "materials/day-2-session-1-design.html#our-turn-2.1.2",
    "title": "📦 Building tidy tools",
    "section": "Our turn \"2.1.2\"",
    "text": "Our turn \"2.1.2\"\nImplement a function, uss_get_matches():\n\ngiven a country\nreturn a matches tibble\n\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.1.2\")\n\n\n\nGet new files, btt22::btt_get(\"2.1.2\"):\n\ncolumns.R, get-matches.R\ntest-get-matches.R"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#columns.r",
    "href": "materials/day-2-session-1-design.html#columns.r",
    "title": "📦 Building tidy tools",
    "section": "columns.R",
    "text": "columns.R\nIn {ussie} we (will) have all sorts of tibbles:\n\nengsoc\nmatches\nteams_matches\nseasons\n\n\nand groupings:\n\nseasons_grouping\naccumulate"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#build-time-vs.-run-time",
    "href": "materials/day-2-session-1-design.html#build-time-vs.-run-time",
    "title": "📦 Building tidy tools",
    "section": "Build-time vs. run-time",
    "text": "Build-time vs. run-time\n\nPut this code, temporarily, into columns.R:\n\nbuild_time <- Sys.time()\n\nrun_time <- function() {\n  Sys.time()\n}\n\n\ndevtools::load_all()\ntry build_time, run_time()\n\n\n\nIf you need to delay evaluation, try a function."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#get_soccer_data",
    "href": "materials/day-2-session-1-design.html#get_soccer_data",
    "title": "📦 Building tidy tools",
    "section": "get_soccer_data()",
    "text": "get_soccer_data()\nGiven name of dataset in {engsoccerdata}, return dataset:\nget_soccer_data <- function(data_name) {\n  # create isolated environment\n  e <- new.env()\n  \n  # put the data into environment\n  name <- utils::data(\n    list = data_name, \n    package = \"engsoccerdata\", \n    envir = e\n  )[1]\n  \n  # return data from environment\n  e[[name]]\n}"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#uss_countries",
    "href": "materials/day-2-session-1-design.html#uss_countries",
    "title": "📦 Building tidy tools",
    "section": "uss_countries()",
    "text": "uss_countries()\nReturn set of valid values for country:\nuss_countries <- function() {\n  c(\"england\", \"germany\", \"holland\", \"italy\", \"spain\")\n}\n\nRun-time vs. build-time\nSafer habit: delay evaluation by wrapping code in a function"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#best_wins_leeds",
    "href": "materials/day-2-session-1-design.html#best_wins_leeds",
    "title": "📦 Building tidy tools",
    "section": "best_wins_leeds()",
    "text": "best_wins_leeds()\n\nusethis::use_package(\"engsoccerdata\")\nbest_wins_leeds <- function(n = 10) {\n  engsoccerdata::bestwins(\n    engsoccerdata::england,\n    teamname = \"Leeds United\",\n    N = n\n  )\n}\n\n\n\ndevtools::check(), comment best_wins_leeds()\ndevtools::check() 🤔\nrestore commented-out code"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#uss_get_matches",
    "href": "materials/day-2-session-1-design.html#uss_get_matches",
    "title": "📦 Building tidy tools",
    "section": "uss_get_matches()",
    "text": "uss_get_matches()\nGiven country, return matches data:\nuss_get_matches <- function(country = uss_countries()) {\n  \n  # validate country\n  country <- match.arg(country)\n  \n  # get data for country\n  data <- get_soccer_data(country)\n  \n  # capitalize\n  substr(country, 1, 1) <- toupper(substr(country, 1, 1))\n  \n  # make matches data, return\n  uss_make_matches(data, country) \n}"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#document",
    "href": "materials/day-2-session-1-design.html#document",
    "title": "📦 Building tidy tools",
    "section": "Document",
    "text": "Document\nShow an example (or two) of using uss_get_matches() in your package vignette."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#pure-functions-vs.-side-effects",
    "href": "materials/day-2-session-1-design.html#pure-functions-vs.-side-effects",
    "title": "📦 Building tidy tools",
    "section": "Pure functions vs. side effects",
    "text": "Pure functions vs. side effects\n\nI (Ian) have been programming since 1982, in some form.\n\n\n\nI studied mechanical engineering, not computer science; programming on the side.\n\n\n\n\nWhen I learned about this in 2016, it changed my view of programming.\n\n\n\n\nKeeping this distinction in mind simplifies a lot of challenges."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#pure-function",
    "href": "materials/day-2-session-1-design.html#pure-function",
    "title": "📦 Building tidy tools",
    "section": "Pure function",
    "text": "Pure function\nA function where:\n\nthe return value depends only on argument values\nonly change is the return value\n\n\nExamples:\n\n\nfunction(x, y) {\n  x + y\n}\n\n\ncos(pi)"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#side-effects",
    "href": "materials/day-2-session-1-design.html#side-effects",
    "title": "📦 Building tidy tools",
    "section": "Side effects",
    "text": "Side effects\nA function where:\n\nthe return value can depend on “the outside universe”\nthere is a change in the “the outside universe”\n\n\nExamples:\n\n\nreadr::read_csv(\"myfile.csv\")\n\n\nrunif(1)"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#why-is-this-important",
    "href": "materials/day-2-session-1-design.html#why-is-this-important",
    "title": "📦 Building tidy tools",
    "section": "Why is this important?",
    "text": "Why is this important?\n\n\nPure functions easier to test than functions with side effects.\n\n\n\n\nSide effects (interactions with universe) take time (Shiny).\n\n\n\n\nFunctions with side effects should document the effects.\n\n\n\n\nSide effects are not inherently bad (we do need to write to the file system), but they need extra care."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#discuss-with-your-neighbour",
    "href": "materials/day-2-session-1-design.html#discuss-with-your-neighbour",
    "title": "📦 Building tidy tools",
    "section": "Discuss with your neighbour",
    "text": "Discuss with your neighbour\nAre these {ussie} functions pure?\n\nuss_countries()\nuss_make_matches()\nget_soccer_data()\nuss_get_matches()"
  },
  {
    "objectID": "materials/day-2-session-1-design.html#practical-advice",
    "href": "materials/day-2-session-1-design.html#practical-advice",
    "title": "📦 Building tidy tools",
    "section": "Practical advice",
    "text": "Practical advice\nTry to separate tasks into pure functions and side effects:\n\neasier to test the pure functions and side effects separately\nuse these functions in higher-level functions\n\n\nFor example:\n\nuss_make_matches() is a pure function.\nget_soccer_data() uses side effects.\nuss_get_matches() calls each of these functions."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#summary",
    "href": "materials/day-2-session-1-design.html#summary",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\n\n\nNaming: be consistent, concise, yet evocative.\n\n\n\n\nArgument order: data, descriptors, dots, details.\n\n\n\n\nReturn value type: be consistent, predictable.\n\n\n\n\nEasy to remember data (first) argument and return value:\n\neasy to use pipe, |>.\n\n\n\n\n\nBe mindful of side effects."
  },
  {
    "objectID": "materials/day-2-session-1-design.html#references",
    "href": "materials/day-2-session-1-design.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt\n\n\n\nWickham, Charlotte, and Hadley Wickham. 2021. Building Tidy Tools. rstudio::conf 2020. https://github.com/rstudio-conf-2020/build-tidy-tools.\n\n\nWickham, Hadley, and Jenny Bryan. 2020. R Packages. The work-in-progress 2nd edition. Online. https://r-pkgs.org/index.html."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#introductions",
    "href": "materials/day-1-session-1-introduction.html#introductions",
    "title": "📦 Building tidy tools",
    "section": "Introductions",
    "text": "Introductions\nThis is a two-day, hands-on workshop for those who have embraced the tidyverse and want to build their own packages.\n\nHave you written a few of your own R functions?\nAre you ready to start sharing your code (or data) through R packages?\nAre you curious what you can do to make your first R packages easy for your users to use, and for you to maintain?"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#the-team",
    "href": "materials/day-1-session-1-introduction.html#the-team",
    "title": "📦 Building tidy tools",
    "section": "The team",
    "text": "The team\n\n\nEmma Rand 🐦@er13_r\nElliot Murphy\nBeatriz Milz 🐦@BeaMilz\n\nIan Lyttle 🐦@ijlyttle\nHaley Jeppson\nTed Laderas 🐦@tladeras\n\n\n \nStanding on the shoulders of Building Tidy Tools, rstudio::conf(2020) (C. Wickham and Wickham 2021), R Packages (H. Wickham and Bryan 2020)"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#housekeeping",
    "href": "materials/day-1-session-1-introduction.html#housekeeping",
    "title": "📦 Building tidy tools",
    "section": "Housekeeping",
    "text": "Housekeeping\n\nToilets\nFire exits and alarms\nanything else?"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#prerequisites",
    "href": "materials/day-1-session-1-introduction.html#prerequisites",
    "title": "📦 Building tidy tools",
    "section": "Prerequisites",
    "text": "Prerequisites\nYou need a laptop with the following installed:\n\nR and RStudio\nR package development toolchain: Rtools(windows) or XCode (mac) or r-base-dev\nThe following packages: devtools and btt22\nGit\nGitHub account linked to RStudio\n\nDetailed instructions for installing these are covered in Prerequisites"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#day-1",
    "href": "materials/day-1-session-1-introduction.html#day-1",
    "title": "📦 Building tidy tools",
    "section": "Day 1",
    "text": "Day 1\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 10:30\nSession 1: Introduction and the whole game\n\n\n10:30 - 11:00\n☕ Coffee break\n\n\n11:00 - 12:30\nSession 2: Documentation - Minimal\n\n\n12:30 - 13:30\n🍱 Lunch break\n\n\n13:30 - 15:00\nSession 3: Unit testing\n\n\n15:00 - 15:30\n☕ Coffee break\n\n\n15:30 - 17:00\nSession 4: Documentation - Sharing"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#day-2",
    "href": "materials/day-1-session-1-introduction.html#day-2",
    "title": "📦 Building tidy tools",
    "section": "Day 2",
    "text": "Day 2\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 10:30\nSession 1: Function design\n\n\n10:30 - 11:00\n☕ Coffee break\n\n\n11:00 - 12:30\nSession 2: Side effects\n\n\n12:30 - 13:30\n🍱 Lunch break\n\n\n13:30 - 15:00\nSession 3: Tidy eval\n\n\n15:00 - 15:30\n☕ Coffee break\n\n\n15:30 - 17:00\nSession 4: Miscellany"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#code-of-conduct",
    "href": "materials/day-1-session-1-introduction.html#code-of-conduct",
    "title": "📦 Building tidy tools",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nCode of Conduct & COVID\n\n😷 Please wear a mask\nEveryone should feel welcome\nNo harassing, intimidating or discriminatory verbal, physical or visual conduct in any form\n\nReporting:\n\n🗣️ any rstudio::conf staff member\n📧 conf@rstudio.com\n☎️ 844-448-1212"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#how-we-will-work",
    "href": "materials/day-1-session-1-introduction.html#how-we-will-work",
    "title": "📦 Building tidy tools",
    "section": "How we will work",
    "text": "How we will work\n\nstickies 🟨 🟩\nno stupid questions"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#learning-objectives",
    "href": "materials/day-1-session-1-introduction.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nAt the end of this section you will be able to:\n\nMake changes to your .Rprofile and RStudio set to make ease the package writing process\nexplain the rationale for writing packages\nfind and explore their own package library/libraries\ndescribe the key components of a minimal package\ndescribe the different states a package can be in\noutline the development of a package using devtools (H. Wickham et al. 2021)\ncreate a simple version controlled package with a remote repo on GitHub\nuse the package interactively with devtools::load_all()\ncheck package validity with devtools::check()"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#global-options",
    "href": "materials/day-1-session-1-introduction.html#global-options",
    "title": "📦 Building tidy tools",
    "section": "🔥 Global Options",
    "text": "🔥 Global Options\n🎬 Tools | Global Options | General\n\n🔲 Restore .RData into workspace at startup: unchecked\nSave workspace to .RData on exit: Never\n\n\n🎬 Tools | Global Options | Code | Display\n\n☑️ Show margin: checked\nMargin column 80"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#set-up-your-.rprofile",
    "href": "materials/day-1-session-1-introduction.html#set-up-your-.rprofile",
    "title": "📦 Building tidy tools",
    "section": "🔥 Set up your .Rprofile",
    "text": "🔥 Set up your .Rprofile\nThe usethis (H. Wickham, Bryan, and Barrett 2022) package allows you to add default information about you that will be used in package development.\n\n\n🎬 Edit your .Rprofile with usethis::edit_r_profile:\n\n\nusethis::edit_r_profile()\n\n\n\nto set the following options…."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#set-up-your-.rprofile-1",
    "href": "materials/day-1-session-1-introduction.html#set-up-your-.rprofile-1",
    "title": "📦 Building tidy tools",
    "section": "🔥 Set up your .Rprofile",
    "text": "🔥 Set up your .Rprofile\noptions(\n  usethis.full_name = \"Emma Rand\",\n  usethis.description = list(\n    `Authors@R` = 'person(\"Emma\", \"Rand\", \n      email = \"emma.rand@york.ac.uk\",     \n      role = c(\"aut\", \"cre\"))'           \n  )\n)"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#set-up-your-.rprofile-2",
    "href": "materials/day-1-session-1-introduction.html#set-up-your-.rprofile-2",
    "title": "📦 Building tidy tools",
    "section": "🔥 Set up your .Rprofile",
    "text": "🔥 Set up your .Rprofile\n🎬 Load devtools and testthat (H. Wickham 2011) on start up\n\n\n\nif (interactive()) {\n  suppressMessages(require(devtools))\n  suppressMessages(require(testthat))\n}\n\n🎬 Restart R for these to take an effect."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#why-make-a-package-1",
    "href": "materials/day-1-session-1-introduction.html#why-make-a-package-1",
    "title": "📦 Building tidy tools",
    "section": "Why make a package",
    "text": "Why make a package"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#script-vs-package",
    "href": "materials/day-1-session-1-introduction.html#script-vs-package",
    "title": "📦 Building tidy tools",
    "section": "Script vs package",
    "text": "Script vs package\n\n\nScript\n\none-off data analysis\ndefined by .R extension\nlibrary() calls\ndocumentation in # comments\nsource()\n\n\nPackage\n\ndefines reusable components\ndefined by presence of DESCRIPTION file\nRequired packages specified in DESCRIPTION, made available in NAMESPACE file\ndocumentation in files and Roxygen comments\nInstall and restart"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#be-nice-to-future-you",
    "href": "materials/day-1-session-1-introduction.html#be-nice-to-future-you",
    "title": "📦 Building tidy tools",
    "section": "Be nice to future you",
    "text": "Be nice to future you\n\nFuture self: CC-BY-NC, by Julen Colomb, derived from Randall Munroe cartoon"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#to-avoid",
    "href": "materials/day-1-session-1-introduction.html#to-avoid",
    "title": "📦 Building tidy tools",
    "section": "To avoid",
    "text": "To avoid\n\n\n\nvia GIPHY"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#where-do-r-packages-come-from",
    "href": "materials/day-1-session-1-introduction.html#where-do-r-packages-come-from",
    "title": "📦 Building tidy tools",
    "section": "Where do R packages come from?",
    "text": "Where do R packages come from?\nCRAN:\n\ninstall.packages(\"praise\")\n\nGitHub:\n\nremotes::install_github(\"rladies/praise\")\n\nBioconductor\n\nBiocManager::install(\"celaref\")"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#where-do-packages-live",
    "href": "materials/day-1-session-1-introduction.html#where-do-packages-live",
    "title": "📦 Building tidy tools",
    "section": "Where do packages live?",
    "text": "Where do packages live?\nIn a library! In\n\nR.home()\n\n[1] \"/opt/R/4.2.0/lib/R\"\n\n\nThe R home directory is the top-level directory of your R installation.\nNote: this is not the same as your working directory or your home directory."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#your-r-installation",
    "href": "materials/day-1-session-1-introduction.html#your-r-installation",
    "title": "📦 Building tidy tools",
    "section": "Your R installation",
    "text": "Your R installation\n\nlist.files(R.home())\n\n [1] \"bin\"          \"COPYING\"      \"doc\"          \"etc\"          \"include\"     \n [6] \"lib\"          \"library\"      \"modules\"      \"share\"        \"SVN-REVISION\""
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#your-library",
    "href": "materials/day-1-session-1-introduction.html#your-library",
    "title": "📦 Building tidy tools",
    "section": "Your library",
    "text": "Your library\n\n.Library\n\n[1] \"/opt/R/4.2.0/lib/R/library\""
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#your-library-1",
    "href": "materials/day-1-session-1-introduction.html#your-library-1",
    "title": "📦 Building tidy tools",
    "section": "Your library",
    "text": "Your library\n\ndir(.Library)\n\n [1] \"base\"         \"boot\"         \"class\"        \"cluster\"      \"codetools\"   \n [6] \"compiler\"     \"datasets\"     \"foreign\"      \"graphics\"     \"grDevices\"   \n[11] \"grid\"         \"KernSmooth\"   \"lattice\"      \"MASS\"         \"Matrix\"      \n[16] \"methods\"      \"mgcv\"         \"nlme\"         \"nnet\"         \"parallel\"    \n[21] \"rpart\"        \"spatial\"      \"splines\"      \"stats\"        \"stats4\"      \n[26] \"survival\"     \"tcltk\"        \"tools\"        \"translations\" \"utils\""
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#the-ussie-package",
    "href": "materials/day-1-session-1-introduction.html#the-ussie-package",
    "title": "📦 Building tidy tools",
    "section": "The ussie package",
    "text": "The ussie package\n\nWe will create a version controlled package called ussie with a remote repo on GitHub.\n\n\n\n\nussie will allow you to work with European football league data supplied by the engsoccerdata package (Curley 2016)."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#explore-ussie",
    "href": "materials/day-1-session-1-introduction.html#explore-ussie",
    "title": "📦 Building tidy tools",
    "section": "Explore ussie",
    "text": "Explore ussie\n\nGitHub\nWebsite\n\n\n\nGitHub is the package in “Source” form\n\nmain code in R/\ndocumentation files in man/ and vignettes/\nDESCRIPTION"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-1",
    "href": "materials/day-1-session-1-introduction.html#package-states-1",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\nThere are five states a package can be in:\n\nsource\nbundled\nbinary\ninstalled\nin-memory\n\n\n\nHaving a understanding of the different states a package can be helpful in understanding package development."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-2",
    "href": "materials/day-1-session-1-introduction.html#package-states-2",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\n\n\n\nSchematic of methods for moving between package states\n\n\n\n\nFigure from R Packages (H. Wickham and Bryan 2020)"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-3",
    "href": "materials/day-1-session-1-introduction.html#package-states-3",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\n\n\n\n\nsource\n\nbundled\nbinary\ninstalled\nin-memory\n\n\nWhat you create and work on.\nSpecific directory structure with some particular components e.g., DESCRIPTION, an R/ directory."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-4",
    "href": "materials/day-1-session-1-introduction.html#package-states-4",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\n\n\n\nsource\n\nbundled\n\nbinary\ninstalled\nin-memory\n\n\nAlso known as “source tarballs”.\nPackage files compressed to single file.\nConventionally .tar.gz\nYou don’t normally need to make one.\nUnpacked it looks very like the source package"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-5",
    "href": "materials/day-1-session-1-introduction.html#package-states-5",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\n\n\n\nsource\nbundled\n\nbinary\n\ninstalled\nin-memory\n\n\nPackage distribution for users w/o dev tools\nAlso a single file\nPlatform specific: .tgz (Mac) .zip (Windows)\nPackage developers submit a bundle to CRAN; CRAN makes and distributes binaries\ninstall.packages()"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-6",
    "href": "materials/day-1-session-1-introduction.html#package-states-6",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\n\n\n\nsource\nbundled\nbinary\n\ninstalled\n\nin-memory\n\n\nA binary package that’s been decompressed into a package library\nCommand line tool R CMD INSTALL powers all package installation"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#package-states-7",
    "href": "materials/day-1-session-1-introduction.html#package-states-7",
    "title": "📦 Building tidy tools",
    "section": "Package states",
    "text": "Package states\n\n\n\nsource\nbundled\nbinary\ninstalled\n\nin-memory\n\n\n\nIf a package is installed, library() makes its function available by loading the package into memory and attaching it to the search path.\nWe do not use library() for packages we are working on\ndevtools::load_all() loads a source package directly into memory."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#create-a-package-1",
    "href": "materials/day-1-session-1-introduction.html#create-a-package-1",
    "title": "📦 Building tidy tools",
    "section": "Create a package",
    "text": "Create a package\nThe CRAN version of engsoccerdata has data from the start of the league until 2016 for england, germany, holland, italy and spain\n\n\n\nBUT the format of the data is not the same for all countries!!"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#about-engsoccerdata",
    "href": "materials/day-1-session-1-introduction.html#about-engsoccerdata",
    "title": "📦 Building tidy tools",
    "section": "About engsoccerdata",
    "text": "About engsoccerdata\n\n\ndplyr::glimpse(engsoccerdata::england)\n\nRows: 192,004\nColumns: 12\n$ Date     <fct> 1888-12-15, 1889-01-19, 1889-03-23, 1888-12-01, 1888-10-13, 1…\n$ Season   <dbl> 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1…\n$ home     <fct> Accrington F.C., Accrington F.C., Accrington F.C., Accrington…\n$ visitor  <fct> Aston Villa, Blackburn Rovers, Bolton Wanderers, Burnley, Der…\n$ FT       <fct> 1-1, 0-2, 2-3, 5-1, 6-2, 3-1, 1-2, 0-0, 2-0, 2-1, 4-4, 4-3, 6…\n$ hgoal    <dbl> 1, 0, 2, 5, 6, 3, 1, 0, 2, 2, 4, 4, 6, 6, 4, 4, 2, 9, 0, 5, 2…\n$ vgoal    <dbl> 1, 2, 3, 1, 2, 1, 2, 0, 0, 1, 4, 3, 1, 2, 2, 2, 1, 1, 2, 1, 0…\n$ division <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ tier     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ totgoal  <dbl> 2, 2, 5, 6, 8, 4, 3, 0, 2, 3, 8, 7, 7, 8, 6, 6, 3, 10, 2, 6, …\n$ goaldif  <dbl> 0, -2, -1, 4, 4, 2, -1, 0, 2, 1, 0, 1, 5, 4, 2, 2, 1, 8, -2, …\n$ result   <fct> D, A, A, H, H, H, A, D, H, H, D, H, H, H, H, H, H, H, A, H, H…\n\n\n\ndplyr::glimpse(engsoccerdata::spain)\n\nRows: 23,915\nColumns: 12\n$ Date    <chr> \"1929-02-10\", \"1929-02-10\", \"1929-02-10\", \"1929-02-10\", \"1929-…\n$ Season  <dbl> 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 19…\n$ home    <chr> \"Arenas de Getxo\", \"Espanyol Barcelona\", \"Real Madrid\", \"Real …\n$ visitor <chr> \"Atletico Madrid\", \"Real Union\", \"CE Europa\", \"Athletic Bilbao…\n$ HT      <chr> \"0-2\", \"1-0\", \"0-0\", \"1-1\", \"0-0\", \"0-1\", \"3-0\", \"0-3\", \"0-1\",…\n$ FT      <chr> \"2-3\", \"3-2\", \"5-0\", \"1-1\", \"0-2\", \"1-2\", \"9-0\", \"0-3\", \"3-1\",…\n$ hgoal   <dbl> 2, 3, 5, 1, 0, 1, 9, 0, 3, 5, 3, 3, 1, 0, 2, 1, 2, 3, 2, 2, 3,…\n$ vgoal   <dbl> 3, 2, 0, 1, 2, 2, 0, 3, 1, 2, 0, 1, 1, 4, 1, 2, 1, 0, 2, 0, 3,…\n$ tier    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ round   <chr> \"league\", \"league\", \"league\", \"league\", \"league\", \"league\", \"l…\n$ group   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ notes   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#first-function",
    "href": "materials/day-1-session-1-introduction.html#first-function",
    "title": "📦 Building tidy tools",
    "section": "First function",
    "text": "First function\nSo the first function in our ussie package will turn these in to standard formats:\n\nuse only the common columns\ngive the same column the same data type"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#create-a-package-2",
    "href": "materials/day-1-session-1-introduction.html#create-a-package-2",
    "title": "📦 Building tidy tools",
    "section": "Create a package",
    "text": "Create a package\nBe deliberate about where you create your package\nDo not nest inside another RStudio project, R package or git repo.\n\n\n🎬 Create a package:\n\nusethis::create_package(\"~/Desktop/ussie\")\n\n\n\nYou may want a different path"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section",
    "href": "materials/day-1-session-1-introduction.html#section",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "✔ Creating 'ussie/'\n✔ Setting active project to 'C:/Users/er13/OneDrive - University of York/Desktop/Desktop/rstudio-conf-2022/ussie'\n✔ Creating 'R/'\n✔ Writing 'DESCRIPTION'\nPackage: ussie\nTitle: What the Package Does (One Line, Title Case)\nVersion: 0.0.0.9000\nAuthors@R (parsed):\n    * Emma Rand <emma.rand@york.ac.uk> [aut, cre] (<https://orcid.org/0000-0002-1358-8275>)\nDescription: What the package does (one paragraph).\nLicense: `use_mit_license()`, `use_gpl3_license()` or friends to\n    pick a license\nEncoding: UTF-8\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.2.0\n✔ Writing 'NAMESPACE'\n✔ Writing 'ussie.Rproj'\n✔ Adding '^ussie\\\\.Rproj$' to '.Rbuildignore'\n✔ Adding '.Rproj.user' to '.gitignore'\n✔ Adding '^\\\\.Rproj\\\\.user$' to '.Rbuildignore'\n✔ Opening 'C:/Users/er13/OneDrive - University of York/Desktop/Desktop/rstudio-conf-2022/ussie/' in new RStudio session\n✔ Setting active project to '<no active project>'"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#create_package",
    "href": "materials/day-1-session-1-introduction.html#create_package",
    "title": "📦 Building tidy tools",
    "section": "create_package()",
    "text": "create_package()\nWhat happens when we run create_package()?\n\nR will create a folder called ussie which is a package and an RStudio project\nrestart R in the new project\ncreate some infrastructure for your package\nstart the RStudio Build pane\n\n\n\ncontinued….."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#create_package-1",
    "href": "materials/day-1-session-1-introduction.html#create_package-1",
    "title": "📦 Building tidy tools",
    "section": "create_package()",
    "text": "create_package()\nWhat happens when we run create_package()?\n\nussie.Rproj\nDESCRIPTION provides metadata about your package.\nThe R/ directory is where we will put .R files with function definitions.\nNAMESPACE declares the functions your package exports and the functions your package imports from other packages.\n\n\n\ncontinued….."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#create_package-2",
    "href": "materials/day-1-session-1-introduction.html#create_package-2",
    "title": "📦 Building tidy tools",
    "section": "create_package()",
    "text": "create_package()\nWhat happens when we run create_package()?\n\n.Rbuildignore lists files that we need but that should not be included when building the R package from source.\n.gitignore anticipates Git usage and ignores some standard, behind-the-scenes files created by R and RStudio."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#make-package-a-git-repo",
    "href": "materials/day-1-session-1-introduction.html#make-package-a-git-repo",
    "title": "📦 Building tidy tools",
    "section": "Make package a git repo",
    "text": "Make package a git repo\n🎬 Make your package a git repository\n\nusethis::use_git()"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-1",
    "href": "materials/day-1-session-1-introduction.html#section-1",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "✔ Setting active project to 'C:/Users/er13/OneDrive - University of York/Desktop/Desktop/rstudio-conf-2022/ussie'\n✔ Initialising Git repo\n✔ Adding '.Rhistory', '.Rdata', '.httr-oauth', '.DS_Store' to '.gitignore'\nThere are 5 uncommitted files:\n* '.gitignore'\n* '.Rbuildignore'\n* 'DESCRIPTION'\n* 'NAMESPACE'\n* 'ussie.Rproj'\nIs it ok to commit them?\n\n1: No way\n2: Negative\n3: I agree\n\n\n\n🎬 Choose the option that means yes!"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-2",
    "href": "materials/day-1-session-1-introduction.html#section-2",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "✔ Adding files\n✔ Making a commit with message 'Initial commit'\n• A restart of RStudio is required to activate the Git pane\nRestart now?\n\n1: Yup\n2: Not now\n3: Absolutely not\n\n\n\n🎬 Choose the option that means yes!\n\n\nYour session will restart."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#put-a-remote-copy-on-github",
    "href": "materials/day-1-session-1-introduction.html#put-a-remote-copy-on-github",
    "title": "📦 Building tidy tools",
    "section": "Put a remote copy on GitHub",
    "text": "Put a remote copy on GitHub\n🎬 Put on GitHub as a remote repository\n\nusethis::use_github()"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-3",
    "href": "materials/day-1-session-1-introduction.html#section-3",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "ℹ Defaulting to 'https' Git protocol\n✔ Setting active project to 'C:/Users/er13/OneDrive - University of York/Desktop/Desktop/rstudio-conf-2022/ussie'\n✔ Creating GitHub repository '3mmaRand/ussie'\n✔ Setting remote 'origin' to 'https://github.com/3mmaRand/ussie.git'\n✔ Setting URL field in DESCRIPTION to 'https://github.com/3mmaRand/ussie'\n✔ Setting BugReports field in DESCRIPTION to 'https://github.com/3mmaRand/ussie/issues'\nThere is 1 uncommitted file:\n* 'DESCRIPTION'\nIs it ok to commit it?\n\n1: Absolutely\n2: Nope\n3: No\n\n🎬 Choose the option that means yes!"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-4",
    "href": "materials/day-1-session-1-introduction.html#section-4",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "✔ Adding files\n✔ Making a commit with message 'Add GitHub links to DESCRIPTION'\n✔ Pushing 'main' branch to GitHub and setting 'origin/main' as upstream branch\n✔ Opening URL 'https://github.com/3mmaRand/ussie'"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-5",
    "href": "materials/day-1-session-1-introduction.html#section-5",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "🎬 Quick check with:\n\nusethis::git_sitrep()\n\n\nGit config (global)\n• Name: 'Emma Rand'\n• Email: 'emma.rand@york.ac.uk'\n• Global (user-level) gitignore file: 'C:/Users/er13/.gitignore'\n• Vaccinated: TRUE\n• Default Git protocol: 'https'\n• Default initial branch name: 'master', 'main'\nGitHub\n• Default GitHub host: 'https://github.com'\n• Personal access token for 'https://github.com': '<discovered>'\n• GitHub user: '3mmaRand'\n• Token scopes: 'gist, repo, user, workflow'\n• Email(s): 'emma.rand@york.ac.uk (primary)', '7593411+3mmaRand@users.noreply.github.com'\nGit repo for current project\n• Active usethis project: 'C:/Users/er13/OneDrive - University of York/Desktop/Desktop/rstudio-conf-2022/ussie'\n• Default branch: 'main'\n• Current local branch -> remote tracking branch:\n  'main' -> 'origin/main'\nGitHub remote configuration\n• Type = 'ours'\n• Host = 'https://github.com'\n• Config supports a pull request = TRUE\n• origin = '3mmaRand/ussie' (can push)\n• upstream = <not configured>\n• Desc = 'origin' is both the source and primary repo.\n  \n  Read more about the GitHub remote configurations that usethis supports at:\n  'https://happygitwithr.com/common-remote-setups.html'"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#add-the-first-function",
    "href": "materials/day-1-session-1-introduction.html#add-the-first-function",
    "title": "📦 Building tidy tools",
    "section": "Add the first function",
    "text": "Add the first function\nWe will add uss_make_matches()\nFunctions will go in an .R file.\n\n\n\nThere’s a usethis helper for adding .R files!\n\n\n\n\n\nusethis::use_r(\"file_name\")\n\n\n\nusethis::use_r() adds the file extension and saves in R/ folder"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#usethisuse_r",
    "href": "materials/day-1-session-1-introduction.html#usethisuse_r",
    "title": "📦 Building tidy tools",
    "section": "usethis::use_r()",
    "text": "usethis::use_r()\n🎬 Create a new R file in your package called matches.R\n\n\n\n\nusethis::use_r(\"matches\")\n\n• Modify 'R/matches.R'\n• Call `use_test()` to create a matching test file\n\n\n\nWe will come back to that test files this afternoon"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#the-function",
    "href": "materials/day-1-session-1-introduction.html#the-function",
    "title": "📦 Building tidy tools",
    "section": "The function?",
    "text": "The function?\nWe want to be able to use the function like this: uss_make_matches(engsoccerdata::italy)"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#add-the-function",
    "href": "materials/day-1-session-1-introduction.html#add-the-function",
    "title": "📦 Building tidy tools",
    "section": "Add the function",
    "text": "Add the function\n🎬 Put the following code into matches:\n\n\nuss_make_matches <- function(data_engsoc) {\n  result <-\n    data_engsoc |>\n    tibble::as_tibble() |>\n    dplyr::transmute(\n      tier = as.integer(tier),\n      season = as.integer(Season),\n      date = as.Date(Date),\n      home = as.character(home),\n      visitor = as.character(visitor),\n      goals_home = as.integer(hgoal),\n      goals_visitor = as.integer(vgoal)\n    )\n  result\n}"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#development-workflow",
    "href": "materials/day-1-session-1-introduction.html#development-workflow",
    "title": "📦 Building tidy tools",
    "section": "Development workflow",
    "text": "Development workflow\nIn a normal script you might use:\n\nsource(\"R/matches.R\")\n\n\n\n\nbut when building packages we use a devtools approach"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#development-workflow-1",
    "href": "materials/day-1-session-1-introduction.html#development-workflow-1",
    "title": "📦 Building tidy tools",
    "section": "Development workflow",
    "text": "Development workflow\n\n\n\n\n%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#f3f3f3',  'lineColor':'#EE9AD9'}}}%%\n\n  flowchart LR\n      id1(\"Load code: \\n load_all()\") --> \n      id2(\"Explore in \\n console\") --> \n      id3(\"Modify \\n code\")\n      id3 --> id1\n      style id1 id2 id3 stroke:#3F3F3F,stroke-width:2px"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#devtoolsload_all",
    "href": "materials/day-1-session-1-introduction.html#devtoolsload_all",
    "title": "📦 Building tidy tools",
    "section": "devtools::load_all()",
    "text": "devtools::load_all()\n🎬 Load package with devtools::load_all().\n\ndevtools::load_all()\n\nℹ Loading ussie"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#experiment",
    "href": "materials/day-1-session-1-introduction.html#experiment",
    "title": "📦 Building tidy tools",
    "section": "Experiment",
    "text": "Experiment\n🎬 Try out the uss_make_matches() function in the console.\n\nuss_make_matches(engsoccerdata::italy)\n\n\n# A tibble: 25,404 × 7\n    tier season date       home   visitor goals_home goals_visitor\n   <int>  <int> <date>     <chr>  <chr>        <int>         <int>\n 1     1   1934 1934-09-30 Lazio… US Liv…          6             1\n 2     1   1934 1934-09-30 Torin… Unione…          3             1\n 3     1   1934 1934-09-30 Sampi… Bologn…          2             1\n 4     1   1934 1934-09-30 SSC N… US Ale…          0             1\n 5     1   1934 1934-09-30 ACF F… AS Roma          4             1\n 6     1   1934 1934-09-30 Bresc… Juvent…          0             2\n 7     1   1934 1934-09-30 Inter  US Pal…          3             0\n 8     1   1934 1934-09-30 Pro V… AC Mil…          1             2\n 9     1   1934 1934-10-07 AC Mi… ACF Fi…          1             1\n10     1   1934 1934-10-07 US Li… Inter            1             1\n# … with 25,394 more rows\n\n🤔 There’s no column for the country - that could be confusing"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#update-the-function",
    "href": "materials/day-1-session-1-introduction.html#update-the-function",
    "title": "📦 Building tidy tools",
    "section": "Update the function",
    "text": "Update the function\n🎬 Change the function so it takes an additional argument which is the name of the country. The country name should be in column called “country”. The aim is to use the function like this:\n\nuss_make_matches(engsoccerdata::spain, \"Spain\")\n\n\n\n\n🎬 Load with devtools::load_all() and try out the updated function."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#an-answer",
    "href": "materials/day-1-session-1-introduction.html#an-answer",
    "title": "📦 Building tidy tools",
    "section": "An answer",
    "text": "An answer\n\n\nuss_make_matches <- function(data_engsoc, country) {\n  result <-\n    data_engsoc |>\n    tibble::as_tibble() |>\n    dplyr::transmute(\n      country = as.character(country),\n      tier = as.integer(tier),\n      season = as.integer(Season),\n      date = as.Date(Date),\n      home = as.character(home),\n      visitor = as.character(visitor),\n      goals_home = as.integer(hgoal),\n      goals_visitor = as.integer(vgoal)\n    )\n  result\n}"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#check-your-package-1",
    "href": "materials/day-1-session-1-introduction.html#check-your-package-1",
    "title": "📦 Building tidy tools",
    "section": "Check your package",
    "text": "Check your package\nR CMD check is the gold standard for checking that an R package is in full working order.\n\n\nIt is a programme that is executed in the shell.\n\n\nHowever, devtools has the check() function to allow you to run this without leaving your R session."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#devtoolscheck",
    "href": "materials/day-1-session-1-introduction.html#devtoolscheck",
    "title": "📦 Building tidy tools",
    "section": "devtools::check()",
    "text": "devtools::check()\n🎬 Check your package:\n\ndevtools::check()"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-6",
    "href": "materials/day-1-session-1-introduction.html#section-6",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "── R CMD check results ───────────────────────────────────── ussie 0.0.0.9000 ────\nDuration: 25.1s\n\n❯ checking DESCRIPTION meta-information ... WARNING\n  Non-standard license specification:\n    `use_mit_license()`, `use_gpl3_license()` or friends to pick a\n    license\n  Standardizable: FALSE\n\n❯ checking dependencies in R code ... WARNING\n  '::' or ':::' imports not declared from:\n    'dplyr' 'tibble'\n\n❯ checking R code for possible problems ... NOTE\n  uss_make_matches: no visible binding for global variable 'tier'\n  uss_make_matches: no visible binding for global variable 'Season'\n  uss_make_matches: no visible binding for global variable 'Date'\n  uss_make_matches: no visible binding for global variable 'home'\n  uss_make_matches: no visible binding for global variable 'visitor'\n  uss_make_matches: no visible binding for global variable 'hgoal'\n  uss_make_matches: no visible binding for global variable 'vgoal'\n  Undefined global functions or variables:\n    Date Season hgoal home tier vgoal visitor\n\n0 errors ✔ | 2 warnings ✖ | 1 note ✖\n\n\n\nman/ is created"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#aside-in-case-of-error",
    "href": "materials/day-1-session-1-introduction.html#aside-in-case-of-error",
    "title": "📦 Building tidy tools",
    "section": "Aside: in case of error",
    "text": "Aside: in case of error\nOn running devtools::check() you may get an error if you are using a networked drive.\nUpdating ussie documentation  \nError: The specified file is not readable: path-to\\ussie\\NAMESPACE\n\n\nThis is covered here and can be fixed."
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#aside-in-case-of-error-1",
    "href": "materials/day-1-session-1-introduction.html#aside-in-case-of-error-1",
    "title": "📦 Building tidy tools",
    "section": "Aside: in case of error",
    "text": "Aside: in case of error\nSave a copy of this file:\nfix_for_networked_drives.R\nSave it somewhere other than the ussie directory\nOpen the file from the ussie project session\nRun the whole file\nYou should now find that check() proceeds normally"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-7",
    "href": "materials/day-1-session-1-introduction.html#section-7",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "── R CMD check results ───────────────────────────────────── ussie 0.0.0.9000 ────\nDuration: 25.1s\n\n❯ checking DESCRIPTION meta-information ... WARNING\n  Non-standard license specification:\n    `use_mit_license()`, `use_gpl3_license()` or friends to pick a\n    license\n  Standardizable: FALSE\n\n❯ checking dependencies in R code ... WARNING\n  '::' or ':::' imports not declared from:\n    'dplyr' 'tibble'\n\n❯ checking R code for possible problems ... NOTE\n  uss_make_matches: no visible binding for global variable 'tier'\n  uss_make_matches: no visible binding for global variable 'Season'\n  uss_make_matches: no visible binding for global variable 'Date'\n  uss_make_matches: no visible binding for global variable 'home'\n  uss_make_matches: no visible binding for global variable 'visitor'\n  uss_make_matches: no visible binding for global variable 'hgoal'\n  uss_make_matches: no visible binding for global variable 'vgoal'\n  Undefined global functions or variables:\n    Date Season hgoal home tier vgoal visitor\n\n0 errors ✔ | 2 warnings ✖ | 1 note ✖"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#errors-v-2-warnings-x-1-note-x",
    "href": "materials/day-1-session-1-introduction.html#errors-v-2-warnings-x-1-note-x",
    "title": "📦 Building tidy tools",
    "section": "0 errors v | 2 warnings x | 1 note x",
    "text": "0 errors v | 2 warnings x | 1 note x\n\nchecking DESCRIPTION meta-information … WARNING\nNon-standard license specification\n✅ Next!\nchecking dependencies in R code … WARNING\n‘::’ or ‘:::’ imports not declared\n✅ Next!\nno visible binding for global variables\n✅ Tomorrow!"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#add-a-license",
    "href": "materials/day-1-session-1-introduction.html#add-a-license",
    "title": "📦 Building tidy tools",
    "section": "Add a license",
    "text": "Add a license\nusethis helps out again!\n\n\nuse_mit_license(), use_agpl_license(), use_ccby_license() etc\n\n\n🎬 Add a MIT license1 - use your own name!\n\nusethis::use_mit_license(\"Emma Rand\") \n\nMIT: Simple and permissive license that lets people use and freely distribute your code"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#section-8",
    "href": "materials/day-1-session-1-introduction.html#section-8",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "✔ Setting License field in DESCRIPTION to 'MIT + file LICENSE'\n✔ Writing 'LICENSE'\n✔ Writing 'LICENSE.md'\n✔ Adding '^LICENSE\\\\.md$' to '.Rbuildignore'"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#use_mit_license",
    "href": "materials/day-1-session-1-introduction.html#use_mit_license",
    "title": "📦 Building tidy tools",
    "section": "use_mit_license()",
    "text": "use_mit_license()\n🎬 What files have appeared?\n\n\n🎬 How has the DESCRIPTION file changed?\n\n\n🎬 Run devtools::check() again. Has one of the warnings disappeared?"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#summary",
    "href": "materials/day-1-session-1-introduction.html#summary",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\n\n\nIt is useful to make a package\n\nit is fairly easy with devtools\nit will help you work more reproducibly\n\nPackages can be in one of 5 states:\n\nsource - what you write\nbundled - source compressed to single file, submitted to CRAN\nbinary - distribution for users w/o devtools\ninstalled - a binary that’s been decompressed\nin-memory - installed package that has been loaded"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#summary-continued",
    "href": "materials/day-1-session-1-introduction.html#summary-continued",
    "title": "📦 Building tidy tools",
    "section": "Summary continued",
    "text": "Summary continued\n\n\nA minimal package comprises\n\na folder which is a package and a RProj\nDESCRIPTION, NAMESPACE, .Rbuildignore .gitignore\nR/ directory for functions\n\nWe add functions with usethis:use_r()\nWe use the package interactively with devtools::load_all()\nWe use devtools::check() to execute R CMD check\nWe add a license with usethis::use_mit_license()"
  },
  {
    "objectID": "materials/day-1-session-1-introduction.html#references",
    "href": "materials/day-1-session-1-introduction.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt\n\n\n\nCurley, James. 2016. “Engsoccerdata: English and European Soccer Results 1871-2016.” https://CRAN.R-project.org/package=engsoccerdata.\n\n\nWickham, Charlotte, and Hadley Wickham. 2021. Building Tidy Tools. rstudio::conf 2020. https://github.com/rstudio-conf-2020/build-tidy-tools.\n\n\nWickham, Hadley. 2011. “Testthat: Get Started with Testing” 3. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf.\n\n\nWickham, Hadley, Jennifer Bryan, and Malcolm Barrett. 2022. “Usethis: Automate Package and Project Setup.” https://CRAN.R-project.org/package=usethis.\n\n\nWickham, Hadley, and Jenny Bryan. 2020. R Packages. The work-in-progress 2nd edition. Online. https://r-pkgs.org/index.html.\n\n\nWickham, Hadley, Jim Hester, Winston Chang, and Jennifer Bryan. 2021. “Devtools: Tools to Make Developing r Packages Easier.” https://CRAN.R-project.org/package=devtools."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#learning-objectives",
    "href": "materials/day-1-session-2-doc-minimal.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAt the end of this section you will be able to:\n\n\nDescribe the different levels of package documentation\nDescribe what is in the DESCRIPTION file and know what to edit manually and which parts devtools will edit automagically\nDocument a function with Roxygen comments and use the devtools workflow to convert to “R documentation” format .Rd\nUse some of the most common Roxygen tags\nAdd a package level help file\nDescribe, and document your package with, the common types of package dependencies\nAdd a citation file in Citation File Format (CFF)"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#levels-of-package-documentation",
    "href": "materials/day-1-session-2-doc-minimal.html#levels-of-package-documentation",
    "title": "📦 Building tidy tools",
    "section": "Levels of package documentation",
    "text": "Levels of package documentation\n\nMetadata: The DESCRIPTION file – “what’s in this package?”\nObject documentation: for functions and data\nPackage-level documentation\n\n\n\nVignettes: Long form documentation\n\n\n\npkgdown (Wickham, Hesselberth, and Salmon 2022) sites: Websites for your package!"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#sample-description",
    "href": "materials/day-1-session-2-doc-minimal.html#sample-description",
    "title": "📦 Building tidy tools",
    "section": "Sample DESCRIPTION",
    "text": "Sample DESCRIPTION\n🎬 Take a look at the DESCRIPTION for the following packages. What’s common? What’s different?\n\nggplot2 (Wickham 2016)\n\nCRAN Package page\nDESCRIPTION on GitHub\n\npalmerpenguins (Horst, Hill, and Gorman 2020)\n\nCRAN Package page\nDESCRIPTION on GitHub"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#metadata-in-description",
    "href": "materials/day-1-session-2-doc-minimal.html#metadata-in-description",
    "title": "📦 Building tidy tools",
    "section": "Metadata in DESCRIPTION",
    "text": "Metadata in DESCRIPTION\n\nTitle: One line, title case, with no period. Fewer than 65 characters.\nVersion\nfor release: MAJOR.MINOR.PATCH version.\nfor development version: MAJOR.MINOR.PATCH.9000\nAuthors@R:\n“aut” means author, “cre” means creator, “ctb” means contributor."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#update-description",
    "href": "materials/day-1-session-2-doc-minimal.html#update-description",
    "title": "📦 Building tidy tools",
    "section": "Update DESCRIPTION",
    "text": "Update DESCRIPTION\n🎬 Edit the title\n\n\n🎬 You should find that your information as an author is already included because you edited your .RProfile at the start of the session"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#update-description-1",
    "href": "materials/day-1-session-2-doc-minimal.html#update-description-1",
    "title": "📦 Building tidy tools",
    "section": "Update DESCRIPTION",
    "text": "Update DESCRIPTION\n\nPackage: ussie\nTitle: Work with European Football League Data\nVersion: 0.0.0.9000\nAuthors@R: \n    person(\"Emma\", \"Rand\", , \"emma.rand@york.ac.uk\", role = c(\"aut\", \"cre\"),\n           comment = c(ORCID = \"0000-0002-1358-8275\"))\nDescription: What the package does (one paragraph).\nLicense: MIT + file LICENSE\nEncoding: UTF-8\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.2.0"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#metadata-in-description-1",
    "href": "materials/day-1-session-2-doc-minimal.html#metadata-in-description-1",
    "title": "📦 Building tidy tools",
    "section": "Metadata in DESCRIPTION",
    "text": "Metadata in DESCRIPTION\n\nDescription: One paragraph describing what the package does. Keep the width of the paragraph to 80 characters; indent subsequent lines with 4 spaces.\nLicense\nEncoding: How to encode text, use UTF-8 encoding.\nLazyData: Use true to lazy-load data sets in the package."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#update-description-2",
    "href": "materials/day-1-session-2-doc-minimal.html#update-description-2",
    "title": "📦 Building tidy tools",
    "section": "Update DESCRIPTION",
    "text": "Update DESCRIPTION\n🎬 Edit the description\n\n\nDescription: This is a demo package for the \"Building Tidy Tools\" workshop at \n    at rstudio::conf(2022L). It allows you to work with European football \n    league data supplied by the engsoccerdata package (Curley 2016)."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#object-documentation-1",
    "href": "materials/day-1-session-2-doc-minimal.html#object-documentation-1",
    "title": "📦 Building tidy tools",
    "section": "Object documentation",
    "text": "Object documentation\n\nObject documentation is what you see when you use ? or help()\nFiles are written in a special “R documentation” format: .Rd\n.Rd resembles LaTeX,"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#manuss_make_matches.rd",
    "href": "materials/day-1-session-2-doc-minimal.html#manuss_make_matches.rd",
    "title": "📦 Building tidy tools",
    "section": "man/uss_make_matches.Rd",
    "text": "man/uss_make_matches.Rd\n\n% Generated by roxygen2: do not edit by hand\n% Please edit documentation in R/matches.R\n\\name{uss_make_matches}\n\\alias{uss_make_matches}\n\\title{Make a standard league-play tibble}\n\\usage{\nuss_make_matches(data_engsoc, country)\n}\n\\arguments{\n\\item{data_engsoc}{obtained from {engsoccerdata}.}\n\n\\item{country}{\\code{character} scalar, specifies the league.}\n}\n\\value{\na tibble with columns \\code{country}, \\code{date}, \\code{season}, \\code{tier}, \\code{home},\n\\code{visitor}, \\code{goals_home}, \\code{goals_visitor}.\n}\n\\description{\nGiven a league-play data frame from {engsoccer}, returns a tibble with\nstandardised column-names and types, e.g. \\code{date} is a \\code{Date}.\n}\n\\examples{\nuss_make_matches(engsoccerdata::spain, \"Spain\")\n}"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#object-documentation-2",
    "href": "materials/day-1-session-2-doc-minimal.html#object-documentation-2",
    "title": "📦 Building tidy tools",
    "section": "Object documentation",
    "text": "Object documentation\n🥳 We don’t have to write it!!\n\n\nWe write “roxygen comments” in the .R files\nFunctions from roxygen2 (Wickham et al. 2022) do the work but we can use devtools functions to call them"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#roxygen-comments",
    "href": "materials/day-1-session-2-doc-minimal.html#roxygen-comments",
    "title": "📦 Building tidy tools",
    "section": "Roxygen comments",
    "text": "Roxygen comments\n\n#' Make a standard league-play tibble\n#'\n#' Given a league-play data frame from {engsoccer}, returns a tibble with\n#' standardised column-names and types, e.g. `date` is a `Date`.\n#'\n#' @param data_engsoc  obtained from {engsoccerdata}.\n#' @param country `character` scalar, specifies the league.\n#'\n#' @return a tibble with columns `country`, `date`, `season`, `tier`, `home`,\n#'    `visitor`, `goals_home`, `goals_visitor`.\n#' @export\n#'\n#' @examples\n#' uss_make_matches(engsoccerdata::spain, \"Spain\")\nuss_make_matches <- function(data_engsoc, country) {\n  result <-\n    data_engsoc |>\n    tibble::as_tibble() |>\n    dplyr::transmute(\n      country = as.character(country),\n      tier = as.integer(tier),\n      season = as.integer(Season),\n      date = as.Date(Date),\n      home = as.character(home),\n      visitor = as.character(visitor),\n      goals_home = as.integer(hgoal),\n      goals_visitor = as.integer(vgoal)\n    )\n  result\n}\n\n\nthe #' indicates it is a roxygen comment"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#object-documentation-workflow",
    "href": "materials/day-1-session-2-doc-minimal.html#object-documentation-workflow",
    "title": "📦 Building tidy tools",
    "section": "Object documentation workflow",
    "text": "Object documentation workflow\n\nAdd roxygen comments to your .R files.\nRun devtools::document() to convert roxygen comments to .Rd files.\nLoad the package with devtools::load_all()\nPreview documentation with ?\nRepeat until the documentation looks the way you want."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#document-your-function",
    "href": "materials/day-1-session-2-doc-minimal.html#document-your-function",
    "title": "📦 Building tidy tools",
    "section": "Document your function",
    "text": "Document your function\n🎬 Open matches.R\n🎬 Put your cursor anywhere in the function and do Code | Insert Roxygen Documentation (Ctrl-Alt-Shift-R)"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#section",
    "href": "materials/day-1-session-2-doc-minimal.html#section",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "#' Title\n#'\n#' @param data_engsoc \n#' @param country \n#'\n#' @return\n#' @export\n#'\n#' @examples\nuss_make_matches <- function(data_engsoc, country) {\n  result <-\n    data_engsoc |>\n    tibble::as_tibble() |>\n    dplyr::transmute(\n      country = as.character(country),\n      tier = as.integer(tier),\n      season = as.integer(Season),\n      date = as.Date(Date),\n      home = as.character(home),\n      visitor = as.character(visitor),\n      goals_home = as.integer(hgoal),\n      goals_visitor = as.integer(vgoal)\n    )\n  result\n}"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#roxygen-comments-and-tags",
    "href": "materials/day-1-session-2-doc-minimal.html#roxygen-comments-and-tags",
    "title": "📦 Building tidy tools",
    "section": "Roxygen comments and tags",
    "text": "Roxygen comments and tags\n\n#' indicates it is a roxygen comment\n@ indicates a roxygen tag\n\n@param arg — describe the inputs\n@examples— show how the function works\n@seealso — point out related functions\n@return — describe the outputs\n@export — is this a user visible function"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#document-your-function-1",
    "href": "materials/day-1-session-2-doc-minimal.html#document-your-function-1",
    "title": "📦 Building tidy tools",
    "section": "Document your function",
    "text": "Document your function\n🎬 Give your function a title and a brief description\n🎬 Define the two parameters\n🎬 Describe what the function returns"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#our-answer",
    "href": "materials/day-1-session-2-doc-minimal.html#our-answer",
    "title": "📦 Building tidy tools",
    "section": "Our answer",
    "text": "Our answer\n\n#' Make a standard league-play tibble\n#'\n#' Given a league-play data frame from {engsoccer}, returns a tibble with\n#' standardised column-names and types, e.g. `date` is a `Date`.\n#'\n#' @param data_engsoc  obtained from {engsoccerdata}.\n#' @param country `character` scalar, specifies the league.\n#'\n#' @return a tibble with columns `country`, `date`, `season`, `tier`, `home`,\n#'    `visitor`, `goals_home`, `goals_visitor`.\n\n🎬 Save matches.R"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#build-documentation",
    "href": "materials/day-1-session-2-doc-minimal.html#build-documentation",
    "title": "📦 Building tidy tools",
    "section": "Build documentation",
    "text": "Build documentation\n🎬 Run devtools::document()\n\nℹ Updating ussie documentation\nℹ Loading ussie\nWriting NAMESPACE\nWriting uss_make_matches.Rd\nWarning message:\n[matches.R:13] @examples requires a value \nWe will that fix later!"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#take-a-look-1",
    "href": "materials/day-1-session-2-doc-minimal.html#take-a-look-1",
    "title": "📦 Building tidy tools",
    "section": "Take a look 1",
    "text": "Take a look 1\n├── DESCRIPTION\n├── LICENSE\n├── LICENSE.md\n├── man\n│   └── uss_make_matches.Rd \n├── NAMESPACE\n├── R\n│   └── matches.R\n└── ussie.Rproj\n\nNAMESPACE now lists the exported function\nman/uss_make_matches.Rd has been written"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#take-a-look-2",
    "href": "materials/day-1-session-2-doc-minimal.html#take-a-look-2",
    "title": "📦 Building tidy tools",
    "section": "Take a look 2",
    "text": "Take a look 2\n🎬 Load the package : devtools::load_all()\n🎬 Preview the documentation with ?uss_make_matches"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#fix-warning",
    "href": "materials/day-1-session-2-doc-minimal.html#fix-warning",
    "title": "📦 Building tidy tools",
    "section": "Fix warning",
    "text": "Fix warning\nWarning message:\n[matches.R:13] @examples requires a value \n\nWe need to add a usage example!\n🎬 Under @examples, add one example for using your function\n\n\n#' @examples\n#' uss_make_matches(engsoccerdata::spain, \"Spain\")"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#look-again",
    "href": "materials/day-1-session-2-doc-minimal.html#look-again",
    "title": "📦 Building tidy tools",
    "section": "Look again",
    "text": "Look again\n🎬 Save matches.R, run devtools::document() followed by devtools::load_all()\n\n🎬 Preview the documentation with ?uss_make_matches and edit if needed"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#package-level-help-page",
    "href": "materials/day-1-session-2-doc-minimal.html#package-level-help-page",
    "title": "📦 Building tidy tools",
    "section": "Package-level help page",
    "text": "Package-level help page\n🎬 What happens if you do:\n\n?ussie\n\n\nNo documentation for 'ussie' in specified packages and libraries:\nyou could try '??ussie'"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#package-level-help-page-1",
    "href": "materials/day-1-session-2-doc-minimal.html#package-level-help-page-1",
    "title": "📦 Building tidy tools",
    "section": "Package-level help page",
    "text": "Package-level help page\nWe can fix this with use_package_doc()\n🎬 Add a package-level help page:\n\nusethis::use_package_doc()\n\n\n✔ Writing 'R/ussie-package.R'\n• Modify 'R/ussie-package.R'\n\n\n🎬 Run devtools::document() then devtools::load_all() followed by ?ussie"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#section-1",
    "href": "materials/day-1-session-2-doc-minimal.html#section-1",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "rationale needed….why imports from for tibble but not dplyr??\n🎬 fgdg\n\nusethis::use_import_from(\"tibble\", \"tibble\")\n\n\n✔ Adding 'tibble' to Imports field in DESCRIPTION\n✔ Adding '@importFrom tibble tibble' to 'R/ussie-package.R'\n✔ Writing 'NAMESPACE'\n✔ Loading ussie"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#devtoolscheck",
    "href": "materials/day-1-session-2-doc-minimal.html#devtoolscheck",
    "title": "📦 Building tidy tools",
    "section": "devtools::check()",
    "text": "devtools::check()\nThis is a good time to run R CMD check using devtools::check() to ensure our package is in full working order.\n🎬 devtools::check()"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#section-2",
    "href": "materials/day-1-session-2-doc-minimal.html#section-2",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "── R CMD check results ─────────────────────────────────── ussie 0.0.0.9000 ────\nDuration: 40.4s\n\n❯ checking dependencies in R code ... WARNING\n  '::' or ':::' import not declared from: 'dplyr'\n\n❯ checking for unstated dependencies in examples ... WARNING\n  '::' or ':::' import not declared from: 'engsoccerdata'\n\n❯ checking R code for possible problems ... NOTE\n  uss_make_matches: no visible binding for global variable 'tier'\n  uss_make_matches: no visible binding for global variable 'Season'\n  uss_make_matches: no visible binding for global variable 'Date'\n  uss_make_matches: no visible binding for global variable 'home'\n  uss_make_matches: no visible binding for global variable 'visitor'\n  uss_make_matches: no visible binding for global variable 'hgoal'\n  uss_make_matches: no visible binding for global variable 'vgoal'\n  Undefined global functions or variables:\n    Date Season hgoal home tier vgoal visitor\n\n0 errors ✔ | 2 warnings ✖ | 1 note ✖\n\nWe’ve gained a warning!"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#package-dependecies-1",
    "href": "materials/day-1-session-2-doc-minimal.html#package-dependecies-1",
    "title": "📦 Building tidy tools",
    "section": "Package dependecies",
    "text": "Package dependecies\nOur warnings are because we have used packages that we have not declared officially.\n\n\nWe need to document our package dependencies"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#package-dependencies",
    "href": "materials/day-1-session-2-doc-minimal.html#package-dependencies",
    "title": "📦 Building tidy tools",
    "section": "Package dependencies",
    "text": "Package dependencies\n\nImports: must be installed for your package to work. If they’re not, they will get installed.\nSuggests: used by your package, but not required. Might provide data for examples, to run tests, build vignettes.\nDepends: Avoid where possible. When your package requires a specific version of R, e.g. Depends: R (>= 3.4.0). Think critically: downstream effects on packages that depend on your package."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#section-3",
    "href": "materials/day-1-session-2-doc-minimal.html#section-3",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "❯ checking dependencies in R code ... WARNING\n  '::' or ':::' import not declared from: 'dplyr'\n\n❯ checking for unstated dependencies in examples ... WARNING\n  '::' or ':::' import not declared from: 'engsoccerdata'"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#package-dependencies-1",
    "href": "materials/day-1-session-2-doc-minimal.html#package-dependencies-1",
    "title": "📦 Building tidy tools",
    "section": "Package dependencies",
    "text": "Package dependencies\nuse_package(package, type = \"Imports\")\n\nType – one of “Imports”, “Depends”, “Suggests”, “Enhances”, or “LinkingTo”\nThe default is “Imports”"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#usethisuse_package",
    "href": "materials/day-1-session-2-doc-minimal.html#usethisuse_package",
    "title": "📦 Building tidy tools",
    "section": "usethis::use_package()",
    "text": "usethis::use_package()\n🎬 Use usethis::use_package() to add the dplyr package to Imports\n\nusethis::use_package(\"dplyr\")\n\n\n✔ Adding 'dplyr' to Imports field in DESCRIPTION\n• Refer to functions with `dplyr::fun()`\nLook how your DESCRIPTION file changed!"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#usethisuse_package-1",
    "href": "materials/day-1-session-2-doc-minimal.html#usethisuse_package-1",
    "title": "📦 Building tidy tools",
    "section": "usethis::use_package()",
    "text": "usethis::use_package()\nNote: we get reminded to “Refer to functions with dplyr::fun()”\nThat is, we do NOT use library(dplyr) to make functions available to our package."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#devtoolscheck-1",
    "href": "materials/day-1-session-2-doc-minimal.html#devtoolscheck-1",
    "title": "📦 Building tidy tools",
    "section": "devtools::check()",
    "text": "devtools::check()\n🎬 Run devtools::check() on your package again"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#section-4",
    "href": "materials/day-1-session-2-doc-minimal.html#section-4",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "── R CMD check results ────────────────────────── ussie 0.0.0.9000 ────\nDuration: 48.2s\n\n❯ checking for unstated dependencies in examples ... WARNING\n  '::' or ':::' import not declared from: 'engsoccerdata'\n\n❯ checking R code for possible problems ... NOTE\n  uss_make_matches: no visible binding for global variable 'tier'\n  uss_make_matches: no visible binding for global variable 'Season'\n  uss_make_matches: no visible binding for global variable 'Date'\n  uss_make_matches: no visible binding for global variable 'home'\n  uss_make_matches: no visible binding for global variable 'visitor'\n  uss_make_matches: no visible binding for global variable 'hgoal'\n  uss_make_matches: no visible binding for global variable 'vgoal'\n  Undefined global functions or variables:\n    Date Season hgoal home tier vgoal visitor\n\n0 errors ✔ | 1 warning ✖ | 1 note ✖"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#suggests",
    "href": "materials/day-1-session-2-doc-minimal.html#suggests",
    "title": "📦 Building tidy tools",
    "section": "Suggests",
    "text": "Suggests\n\nAre used by your package, but not required for it to work\nMight provide data for examples\n\nmatches.R\n#' @examples\n#' uss_make_matches(engsoccerdata::spain, \"Spain\")"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#suggests-1",
    "href": "materials/day-1-session-2-doc-minimal.html#suggests-1",
    "title": "📦 Building tidy tools",
    "section": "Suggests",
    "text": "Suggests\n🎬 Add engsoccerdata\n\nusethis::use_package(\"engsoccerdata\", type = \"Suggests\")\n\n \n\n✔ Adding 'engsoccerdata' to Suggests field in DESCRIPTION\n• Use `requireNamespace(\"engsoccerdata\", quietly = TRUE)` to test if package is installed\n• Then directly refer to functions with `engsoccerdata::fun()`"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#suggests-2",
    "href": "materials/day-1-session-2-doc-minimal.html#suggests-2",
    "title": "📦 Building tidy tools",
    "section": "Suggests",
    "text": "Suggests\n\nPackages listed in Suggests are not automatically installed along with your package.\nThis means that you can’t assume the package is available"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#citation.cff",
    "href": "materials/day-1-session-2-doc-minimal.html#citation.cff",
    "title": "📦 Building tidy tools",
    "section": "CITATION.cff",
    "text": "CITATION.cff\nThe cffr (Hernangómez 2021) package will write a citation file in Citation File Format (CFF) (Druskat et al. 2021) from the description file.\n\ncffr::cff_write()\n\n\n\nCITATION.cff generated\nAdding  CITATION.cff to .Rbuildignore\n\ncff_validate results-----\nCongratulations! This .cff file is valid"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#summary",
    "href": "materials/day-1-session-2-doc-minimal.html#summary",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\n\n\nA package has metadata and object documentation (essential), vignettes and pkgdown sites (optional)\nMetadata is in the DESCRIPTION\n\nsome fields need manual editing\nsome fields are appropriately edited by devtools workflow functions\n\nObjects like functions and data are documented with roxygen comments then turned into documentation with devtools::document()\n\nroxygen comments are indicated with #'\nroxygen tags start with @"
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#summary-continued",
    "href": "materials/day-1-session-2-doc-minimal.html#summary-continued",
    "title": "📦 Building tidy tools",
    "section": "Summary continued",
    "text": "Summary continued\n\n\nPackage dependencies need to be documented\n\npackage dependencies are added with use_package()\nfunctions from dependencies are called with pkg::function()\nwe don’t use library()\n\ncffr::cff_write() will write a citation file from the description file."
  },
  {
    "objectID": "materials/day-1-session-2-doc-minimal.html#references",
    "href": "materials/day-1-session-2-doc-minimal.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt\n\n\n\nDruskat, Stephan, Jurriaan H. Spaaks, Neil Chue Hong, Robert Haines, James Baker, Spencer Bliven, Egon Willighagen, David Pérez-Suárez, and Alexander Konovalov. 2021. “Citation File Format,” August. https://doi.org/10.5281/zenodo.5171937.\n\n\nHernangómez, Diego. 2021. “Cffr: Generate Citation File Format Metadata for r Packages” 6: 3900. https://doi.org/10.21105/joss.03900.\n\n\nHorst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. “Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data.” https://allisonhorst.github.io/palmerpenguins/.\n\n\nWickham, Hadley. 2016. “Ggplot2: Elegant Graphics for Data Analysis.” https://ggplot2.tidyverse.org.\n\n\nWickham, Hadley, Peter Danenberg, Gábor Csárdi, and Manuel Eugster. 2022. “Roxygen2: In-Line Documentation for r.” https://CRAN.R-project.org/package=roxygen2.\n\n\nWickham, Hadley, Jay Hesselberth, and Maëlle Salmon. 2022. “Pkgdown: Make Static HTML Documentation for a Package.” https://CRAN.R-project.org/package=pkgdown."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#learning-objectives",
    "href": "materials/day-2-session-2-side-effects.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning objectives",
    "text": "Learning objectives\nAt the end of this section you will be able to:\n\nwrite effective error messages\ncreate validator functions\nmanage the global state (leave no footprints) using {withr}\ntest functions that use or cause side-effects\nuse snapshot testing"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#errors",
    "href": "materials/day-2-session-2-side-effects.html#errors",
    "title": "📦 Building tidy tools",
    "section": "Errors",
    "text": "Errors\n\nThe most common type of side-effect is the error condition.\n\n\n\nSometimes, error messages can be cryptic:\nseq[10]\nError in seq[10] : object of type 'closure' is not subsettable\n\n\n\n\nYou can write error messages that make things clearer for:\n\ndevelopers who call your functions\nend users"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#creating-an-error-condition",
    "href": "materials/day-2-session-2-side-effects.html#creating-an-error-condition",
    "title": "📦 Building tidy tools",
    "section": "Creating an error condition",
    "text": "Creating an error condition\nAn effective error condition has:\n\npredicate (logical expression used to identify condition)\nclear message for end user\nclass name for developer\nmore information for developer"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#using-clicli_abort",
    "href": "materials/day-2-session-2-side-effects.html#using-clicli_abort",
    "title": "📦 Building tidy tools",
    "section": "Using cli::cli_abort()",
    "text": "Using cli::cli_abort()\n# predicate\nif (y > 3) {\n  cli::cli_abort(\n    # message for end user\n    c(\n      \"{.var y} cannot be greater than 3.\", \n      x = \"{.var y} is {.val {y}}.\"\n    )\n    # class name\n    class = \"ussie_error_threshold\",  \n    # more information\n    y = y     \n  )\n}"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#predicate",
    "href": "materials/day-2-session-2-side-effects.html#predicate",
    "title": "📦 Building tidy tools",
    "section": "Predicate",
    "text": "Predicate\nPrefer:\n\nsimpler predicates and more error-conditions\n\nOver:\n\ncomplex predicates and fewer error-conditions\n\n\nFinding simplest set of predicates is just as challenging as finding the “right” names for functions and arguments."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#message",
    "href": "materials/day-2-session-2-side-effects.html#message",
    "title": "📦 Building tidy tools",
    "section": "Message",
    "text": "Message\nContent:\n\nhow did we violate the predicate?\n\n\nFormatting:\n\n{cli} provides powerful formatting tools:\n\nuse curly-braces and a tag, e.g. {.var y}\nuse more curly-braces to interpolate, e.g. {.val {y}}\n\nsee cli inline-markup for more details."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#class-name",
    "href": "materials/day-2-session-2-side-effects.html#class-name",
    "title": "📦 Building tidy tools",
    "section": "Class name",
    "text": "Class name\n\nA developer, calling your function, can use the class name to handle the error, if they want.\nConvention:\n\n\"{package}_error_{description}\""
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#additional-information",
    "href": "materials/day-2-session-2-side-effects.html#additional-information",
    "title": "📦 Building tidy tools",
    "section": "Additional information",
    "text": "Additional information\nThis “stuff” is also available to an error handler.\n\nProvide the data that went into the predicate.\nProvide name of variable, e.g. y = y.\nAvoid reserved names: message, class, call, body, footer, trace, parent, use_cli_format."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#validation",
    "href": "materials/day-2-session-2-side-effects.html#validation",
    "title": "📦 Building tidy tools",
    "section": "Validation",
    "text": "Validation\nIf there will be an error, surface it quickly.\nValidating the arguments to a function is one way to do this.\n\nFor example:\n\nis this a data frame?\ndoes this data frame have these columns?\n\n\n\nQuestions like these can be generalized into functions:\n\nthrow an error if you need to.\notherwise, return data argument invisibly."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#validate-string-values",
    "href": "materials/day-2-session-2-side-effects.html#validate-string-values",
    "title": "📦 Building tidy tools",
    "section": "Validate string-values",
    "text": "Validate string-values\nYou may be familiar with match.arg():\n\nuses “magic” to compare value (if any) to default\nargument default is vector of strings\n\nif value among defaults, return it - otherwise error\nif no value, return first value in default\n\n\n\nrlang::arg_match() does the same thing, but:\n\npartial match triggers error\nerror messages conform to tidyverse standards"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#snapshot-tests",
    "href": "materials/day-2-session-2-side-effects.html#snapshot-tests",
    "title": "📦 Building tidy tools",
    "section": "Snapshot tests",
    "text": "Snapshot tests\nDesigned for capturing side-effects:\n\nerror messages\ndplyr::glimpse() is a useful shortcut\n\n\nBe careful about accepting changes (don’t just accept).\nCan be temperamental - not run on CRAN.\nWe will go through, using examples."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#your-turn-2.2.1",
    "href": "materials/day-2-session-2-side-effects.html#your-turn-2.2.1",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.2.1\"",
    "text": "Your turn \"2.2.1\"\nImplement validator-functions:\n\nis the country valid?\n\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.2.1\")\n\n\n\nGet new files, btt22::btt_get(\"2.2.1\"):\n\nvalidate.R\ntest-validate.R"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#use-rlangarg_match",
    "href": "materials/day-2-session-2-side-effects.html#use-rlangarg_match",
    "title": "📦 Building tidy tools",
    "section": "Use rlang::arg_match()",
    "text": "Use rlang::arg_match()\n👉 devtools::load_all(), then:\n\n👉 uss_get_matches(\"italy\") 🎉\n👉 uss_get_matches(\"tatooine\") 🎉\n👉 uss_get_matches(\"ita\") 🤔\n\n\n\nget-matches.R:\n\nreplace match.arg() with rlang::arg_match()\n\ntest-get-matches.R:\n\nuncomment test for 2.2.1, then repeat 👉"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#build-error-constructor",
    "href": "materials/day-2-session-2-side-effects.html#build-error-constructor",
    "title": "📦 Building tidy tools",
    "section": "Build error constructor",
    "text": "Build error constructor\n\nusethis::use_package(\"cli\")\nreview validate_data_frame() (call argument)\nbuild constructor for validate_cols():\n\nsomething like {.field {cols}} may be useful\nactivate 2.2.1 tests in test-validate.R, as you go\n\nhold off on snapshot test (we’ll do together)\n\n\n\nadd validator-functions to uss_make_matches():\n\nmatches.R\ncols_engsoc() may be useful"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#managing-global-state",
    "href": "materials/day-2-session-2-side-effects.html#managing-global-state",
    "title": "📦 Building tidy tools",
    "section": "Managing global state",
    "text": "Managing global state\nLeave no footprints.\nLeave the global state how you found it, avoid surprises later:\n\npackages loaded\nalso: options, environment variables\n\n\nLoading {devtools} in .Rprofile changes the global state.\n\n\nWhen we hit the “Knit” button, or the Quarto “Render” button:\n\nit runs in a new R session\ndoes not execute user’s .Rprofile"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#using-self-removing-footprints",
    "href": "materials/day-2-session-2-side-effects.html#using-self-removing-footprints",
    "title": "📦 Building tidy tools",
    "section": "Using “self-removing footprints”",
    "text": "Using “self-removing footprints”\nThe {withr} package gives us tools to:\n\nmodify global state\nspecify when to reverse the modification\n\n\nUseful family of functions:\n\nwithr::local_*()\nchanges the state back when a scope is exited\nif called within a function, normally when the function exits"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#when-could-this-be-useful",
    "href": "materials/day-2-session-2-side-effects.html#when-could-this-be-useful",
    "title": "📦 Building tidy tools",
    "section": "When could this be useful?",
    "text": "When could this be useful?\nCRAN is (rightly) particular about “leave no footprints”.\nYou may need:\n\nwithr::local_options(): change an option\nwithr::local_dir(): change the working directory\nwithr::local_tempfile(): path to a temporary file\n\n\nUseful in testthat code and in R code."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#example",
    "href": "materials/day-2-session-2-side-effects.html#example",
    "title": "📦 Building tidy tools",
    "section": "Example",
    "text": "Example\n\nusethis::use_test(\"validate\")\nchange:\nexpect_identical(error_condition$cols_req, \"foo\")\nto:\nexpect_identical(error_condition$cols_re, \"foo\")\nrerun tests 🤔\n\n\n\nBy default, $ accepts partial matching.\nWe want stricter testing, so we need to set some options."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#our-turn-2.2.2",
    "href": "materials/day-2-session-2-side-effects.html#our-turn-2.2.2",
    "title": "📦 Building tidy tools",
    "section": "Our turn \"2.2.2\"",
    "text": "Our turn \"2.2.2\"\nTurn off $ partial matching when testing.\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.2.2\")\n\n\n\nGet new files, btt22::btt_get(\"2.2.2\"):\n\nutils-testing.R\n\nusethis::use_package(\"withr\")"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#local_warn_partial_match",
    "href": "materials/day-2-session-2-side-effects.html#local_warn_partial_match",
    "title": "📦 Building tidy tools",
    "section": "local_warn_partial_match()",
    "text": "local_warn_partial_match()\nIn essence, this sets (temporarily) TRUE:\n\noptions(\"warnPartialMatchDollar\")\noptions(\"warnPartialMatchArgs\")\noptions(\"warnPartialMatchAttr\")\n\n\nWith a couple of wrinkles:\n\nwe need to treat NULL as FALSE.\nwe set things back when the calling scope exits."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#our-turn-2.2.2-continued",
    "href": "materials/day-2-session-2-side-effects.html#our-turn-2.2.2-continued",
    "title": "📦 Building tidy tools",
    "section": "Our turn \"2.2.2\", continued",
    "text": "Our turn \"2.2.2\", continued\n\nusethis::use_test(\"validate\")\nadd local_warn_partial_match() to top of blocks.\ngetOption(\"warnPartialMatchDollar\")\nchange:\nexpect_identical(error_condition$cols_re, \"foo\")\ndevtools::test() 🎉\ngetOption(\"warnPartialMatchDollar\")\nchange back to $cols_req"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#your-turn-2.2.3",
    "href": "materials/day-2-session-2-side-effects.html#your-turn-2.2.3",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.2.3\"",
    "text": "Your turn \"2.2.3\"\nImplement testing with side effects\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.2.3\")\n\n\n\nNo new files.\n\n\n\nadd local_warn_partial_match() to all test-blocks.\ntest-marches.R:\n\nadd expect_error() calls for data-frame and columns (use class argument).\nat end, add:\n\nexpect_snapshot(dplyr::glimpse(italy))"
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#summary",
    "href": "materials/day-2-session-2-side-effects.html#summary",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\n\nThe most-common side-effect is an error. Good design:\n\n\n\nsimple (as possible) predicate\nclear mesage\nadd a class using naming convention, and additional information\n\n\n\nUse snapshot tests to capture side-effects.\n\nbe very careful when accepting changes to snapshots.\n\n\n\nUse withr::local_*() functions to “leave no footprints”."
  },
  {
    "objectID": "materials/day-2-session-2-side-effects.html#references",
    "href": "materials/day-2-session-2-side-effects.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#learning-objectives",
    "href": "materials/day-1-session-3-testing.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAt the end of this section you will be able to:\n\n\nunderstand the rationale for automating tests\ndescribe the organisation of the testing infrastructure and file contents for the testthat (Wickham 2011) workflow\nset up a package to use testthat\ncreate a test and use some common ‘expectations’\nrun all the tests in a file and in a package"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#why-test-1",
    "href": "materials/day-1-session-3-testing.html#why-test-1",
    "title": "📦 Building tidy tools",
    "section": "Why test?",
    "text": "Why test?\n\nTo make sure our code works\nTo make sure our code keeps working after we add features"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#for-example",
    "href": "materials/day-1-session-3-testing.html#for-example",
    "title": "📦 Building tidy tools",
    "section": "For example",
    "text": "For example\nWhen we run:\n\nitaly <- uss_make_matches(engsoccerdata::italy, \"Italy\")\nspain <- uss_make_matches(engsoccerdata::spain, \"Spain\")\n\nThe objects italy and spain should be tibbles with the same columns: “country”, “tier”, “season”, “date”, “home”, “visitor”, “goals_home” and “goals_visitor”\n\n\nSo we might…"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#check-interactively",
    "href": "materials/day-1-session-3-testing.html#check-interactively",
    "title": "📦 Building tidy tools",
    "section": "Check interactively",
    "text": "Check interactively\nTry these:\n\n\n\n\nclass(italy)\n\n\"tbl_df\"     \"tbl\"        \"data.frame\"\n\nclass(spain)\n\n\"tbl_df\"     \"tbl\"        \"data.frame\" \n\nnames(italy)\n\ncountry\"       \"tier\"          \"season\"        \"date\"         \n\"home\"          \"visitor\"       \"goals_home\"    \"goals_visitor\" \n\nnames(spain)\n\ncountry\"       \"tier\"          \"season\"        \"date\"         \n\"home\"          \"visitor\"       \"goals_home\"    \"goals_visitor\"\n\n\n🎉\n\n\n🥳\n\n\n🎈\n\n\n🎇"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#interactive-testing",
    "href": "materials/day-1-session-3-testing.html#interactive-testing",
    "title": "📦 Building tidy tools",
    "section": "Interactive testing …",
    "text": "Interactive testing …\n…is informal testing:\n\nwrote uss_make_matches()\nloaded package with devtools::load_all()\nran uss_make_matches() interactively\nedited uss_make_matches() if needed\nloaded package with devtools::load_all()\nran uss_make_matches() interactively"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#informal-test-workflow",
    "href": "materials/day-1-session-3-testing.html#informal-test-workflow",
    "title": "📦 Building tidy tools",
    "section": "Informal test workflow",
    "text": "Informal test workflow\n\n\n\n\n%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#f3f3f3',  'lineColor':'#EE9AD9'}}}%%\n\n  flowchart LR\n      id1(\"Reload code: \\n load_all()\") --> \n      id2(\"Explore in \\n console\") --> \n      id3(\"Modify \\n code\")\n      id3 --> id1\n      style id1 id2 id3 stroke:#3F3F3F,stroke-width:2px"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#why-automate-testing-1",
    "href": "materials/day-1-session-3-testing.html#why-automate-testing-1",
    "title": "📦 Building tidy tools",
    "section": "Why automate testing?",
    "text": "Why automate testing?\nProblem: you forget all the interactive testing you’ve done\n\nSolution: have a system to store and re-run the tests!"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#why-automate-testing-2",
    "href": "materials/day-1-session-3-testing.html#why-automate-testing-2",
    "title": "📦 Building tidy tools",
    "section": "Why automate testing?",
    "text": "Why automate testing?\n\nFewer bugs: you are explicit about behaviour of functions.\nEncourages good code design. If it is hard to write unit tests your function may need refactoring\nOpportunity for test-driven development\nRobustness\n\n\nRead more about testing in the recently updated chapter in R Packages (Wickham and Bryan 2020)"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#automated-test-workflow",
    "href": "materials/day-1-session-3-testing.html#automated-test-workflow",
    "title": "📦 Building tidy tools",
    "section": "Automated test workflow",
    "text": "Automated test workflow\n\n\n\n\n%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#f3f3f3',  'lineColor':'#EE9AD9'}}}%%\n\n  flowchart LR\n      id1(\"Reload code: \\n load_all()\") --> \n      id2(\"Run automated tests: \\n test() or test_file()\") --> \n      id3(\"Modify \\n code\")\n      id3 --> id1\n      style id1 id2 id3 stroke:#3F3F3F,stroke-width:2px"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#organisation-files",
    "href": "materials/day-1-session-3-testing.html#organisation-files",
    "title": "📦 Building tidy tools",
    "section": "Organisation: files",
    "text": "Organisation: files\n\n\n\n.\n├── CITATION.cff\n├── DESCRIPTION\n├── LICENSE\n├── LICENSE.md\n├── man\n│   └── matches.Rd\n├── NAMESPACE\n├── R\n│   └── matches.R\n├── README.md\n├── tests\n│   ├── testthat\n│   │   └── test-matches.R\n│   └── testthat.R\n└── ussie.Rproj\n\n\n\ntests files are in: tests/testthat/\ntest files are named test-xxxx.R\ntests/testthat.R: runs the tests when devtools::check() is called"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#organisation-within-files",
    "href": "materials/day-1-session-3-testing.html#organisation-within-files",
    "title": "📦 Building tidy tools",
    "section": "Organisation within files",
    "text": "Organisation within files\n\nany test file test-xxxx.R contains several tests. Might be:\n\nall the tests for a simple function\nall the tests for one part of a complex function\nall the tests for the same functionality in multiple functions"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#organisation-within-files-1",
    "href": "materials/day-1-session-3-testing.html#organisation-within-files-1",
    "title": "📦 Building tidy tools",
    "section": "Organisation within files",
    "text": "Organisation within files\n\na test groups several ‘expectations’. An expectation:\n\nhas the form: expect_zzzz(actual_result, expectation)\nif actual_result == expectation no error\nif actual_result != expectation Error"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#workflow-1",
    "href": "materials/day-1-session-3-testing.html#workflow-1",
    "title": "📦 Building tidy tools",
    "section": "Workflow",
    "text": "Workflow\n\nSet up your package to use testthat: usethis::use_testthat(3) ONCE\n\n\n\nMake a test: usethis::use_test()\n\n\n\n\nRun a set of tests: testthat::test_file()\n\n\n\n\nRun the entire testing suite: devtools::test() and devtools::check()"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#set-up-1",
    "href": "materials/day-1-session-3-testing.html#set-up-1",
    "title": "📦 Building tidy tools",
    "section": "Set up",
    "text": "Set up\nTo set up your package to use testthat: usethis::use_testthat(3) which:\n\nmakes tests/testthat/: this is where the test files live\nedits DESCRIPTION: Adds Suggests:   testthat (>= 3.0.0) and Config/testthat/edition: 3\nmakes tests/testthat.R: this runs the test when you do devtools:check() DO NOT EDIT"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#set-up-2",
    "href": "materials/day-1-session-3-testing.html#set-up-2",
    "title": "📦 Building tidy tools",
    "section": "Set up",
    "text": "Set up\n🎬 Set up your package to use testthat:\n\nusethis::use_testthat(3)\n\n\n\n\n3 means testthat edition 3 (testthat 3e)\nAs well as installing that version of the package, you have to explicitly opt in the edition behaviours."
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#section",
    "href": "materials/day-1-session-3-testing.html#section",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "✔ Adding 'testthat' to Suggests field in DESCRIPTION\n✔ Setting Config/testthat/edition field in DESCRIPTION to '3'\n✔ Creating 'tests/testthat/'\n✔ Writing 'tests/testthat.R'\n• Call `use_test()` to initialize a basic test file and open it for editing."
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#expectations-1",
    "href": "materials/day-1-session-3-testing.html#expectations-1",
    "title": "📦 Building tidy tools",
    "section": "Expectations",
    "text": "Expectations\nBefore we try to make a test, let’s look at some of the expect_zzzz() functions we have available to us.\n\nForm: expect_zzzz(actual_result, expectation)\n\n\n\nthe expectation is what you expect\nthe actual_result is what you are comparing to the expectation\nsome expect_zzzz() have additional arguments"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#for-example-1",
    "href": "materials/day-1-session-3-testing.html#for-example-1",
    "title": "📦 Building tidy tools",
    "section": "For example",
    "text": "For example\n\n# to try out testhtat interactively we load \n# and request edition 3\n# but, you do *not* do that in a package.\nlibrary(testthat)\nlocal_edition(3)\n\n# when the actual result is 42\nresult <- 42\n\n# and we expect the result to be 42: no error\nexpect_identical(result, 42)"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#and",
    "href": "materials/day-1-session-3-testing.html#and",
    "title": "📦 Building tidy tools",
    "section": "and",
    "text": "and\n\n# when the actual result is \"a\"\nresult <- \"a\"\n\n# and we expect the result to be \"a\": no error\nexpect_identical(result, \"a\")"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#but",
    "href": "materials/day-1-session-3-testing.html#but",
    "title": "📦 Building tidy tools",
    "section": "But",
    "text": "But\n\n# when the actual result is 45\nresult <- 45\n\n# and we expect the result to be 42: Error\nexpect_identical(result, 42)\n\nError: `result` (`actual`) not identical to 42 (`expected`).\n\n  `actual`: 45\n`expected`: 42"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#and-1",
    "href": "materials/day-1-session-3-testing.html#and-1",
    "title": "📦 Building tidy tools",
    "section": "and",
    "text": "and\n\n# when the actual result is \"bob\"\nresult <- \"bob\"\n\n# and we expect the result to be \"a\": Error\nexpect_identical(result, \"A\")\n\nError: `result` (`actual`) not identical to \"A\" (`expected`).\n\n`actual`:   \"bob\"\n`expected`: \"A\""
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#some-common-expectations",
    "href": "materials/day-1-session-3-testing.html#some-common-expectations",
    "title": "📦 Building tidy tools",
    "section": "Some common expectations",
    "text": "Some common expectations\nSome types of expect_zzzz()\n\nTesting for identity: expect_identical()\nTesting for equality with wiggle room: expect_equal()\nTesting something is TRUE: expect_true()\nTesting whether objects have names: expect_named()\nTesting errors: expect_error()\n\n\n\nAll expectations are in testthat documentation"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#equality-with-wiggle-room",
    "href": "materials/day-1-session-3-testing.html#equality-with-wiggle-room",
    "title": "📦 Building tidy tools",
    "section": "Equality with wiggle room",
    "text": "Equality with wiggle room\n\n# when the actual result is 42\nresult <- 42\n\n# and we expect the result to be 42: no error\nexpect_equal(result, 42)\n\n\n# and when the actual result is 42.0000001\nresult <- 42.0000001\n\n# and we expect the result to be 42: we still do \n# not have an error because expect_equal() \n# has some tolerance\nexpect_equal(result, 42)"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#equality-with-wiggle-room-1",
    "href": "materials/day-1-session-3-testing.html#equality-with-wiggle-room-1",
    "title": "📦 Building tidy tools",
    "section": "Equality with wiggle room",
    "text": "Equality with wiggle room\n\n# but when the actual result is 42.1\nresult <- 42.1\n\n# and we expect the result to be 42: error because\n# 0.1 is bigger than the default tolerance\nexpect_equal(result, 42)\n\nError: `result` (`actual`) not equal to 42 (`expected`).\n\n  `actual`: 42.1\n`expected`: 42.0\n\n\n\n\nDefault tolerance is relative to the values calculated by waldo::compare() using the algorithm in all.equal()"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#equality-with-wiggle-room-2",
    "href": "materials/day-1-session-3-testing.html#equality-with-wiggle-room-2",
    "title": "📦 Building tidy tools",
    "section": "Equality with wiggle room",
    "text": "Equality with wiggle room\nWe can set the wiggle room:\n\n# but when the actual result is 42.1\nresult <- 42.1\n\n# and we expect the result to be 42: no error if we\n# provide a tolerance\nexpect_equal(result, 42, tolerance = 0.1)"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#testing-something-is-true",
    "href": "materials/day-1-session-3-testing.html#testing-something-is-true",
    "title": "📦 Building tidy tools",
    "section": "Testing something is TRUE",
    "text": "Testing something is TRUE\n\nexpect_true(\"a\" == \"a\")"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#testing-whether-objects-have-names",
    "href": "materials/day-1-session-3-testing.html#testing-whether-objects-have-names",
    "title": "📦 Building tidy tools",
    "section": "Testing whether objects have names",
    "text": "Testing whether objects have names\n\n# vector of named values\nx <- c(a = 1, b = 2, c = 3)\n\n# test whether x has names: no error\nexpect_named(x)\n# test if the names are \"a\", \"b\", \"c\": no error\nexpect_named(x, c(\"a\", \"b\", \"c\"))"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#testing-errors",
    "href": "materials/day-1-session-3-testing.html#testing-errors",
    "title": "📦 Building tidy tools",
    "section": "Testing errors",
    "text": "Testing errors\n……….."
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#make-a-test",
    "href": "materials/day-1-session-3-testing.html#make-a-test",
    "title": "📦 Building tidy tools",
    "section": "Make a test",
    "text": "Make a test\nYou can create and open (or just open) a test file for blah.R with use_test(\"blah\").\n🎬 Create a test file for matches.R . . .\n\nusethis::use_test(\"matches\")\n\n✔ Writing 'tests/testthat/test-matches.R'\n• Modify 'tests/testthat/test-matches.R'\n\n\nIf matches.R is active in the editor, then usethis::use_test() is enough"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#test-file-structure",
    "href": "materials/day-1-session-3-testing.html#test-file-structure",
    "title": "📦 Building tidy tools",
    "section": "Test file structure",
    "text": "Test file structure\ntest_that(\"multiplication works\", {\n  expect_equal(2 * 2, 4)\n})\n\n\ntest_that(\"some thing in the function works\", {\n  expect_zzzz()\n  expect_zzzz()\n  ...\n})"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#make-a-test-1",
    "href": "materials/day-1-session-3-testing.html#make-a-test-1",
    "title": "📦 Building tidy tools",
    "section": "Make a test",
    "text": "Make a test\nWe will add three expectations:\n\ntest that the output of uss_make_matches() is a tibble with expect_true()\ntest that the output of uss_make_matches() has columns with the right names with expect_named()\ntest that the country column of the uss_make_matches() output is correct with expect_identical()\n\n\nWe will do them one at a time so you can practice the workflow."
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#edit-test-matches.r",
    "href": "materials/day-1-session-3-testing.html#edit-test-matches.r",
    "title": "📦 Building tidy tools",
    "section": "Edit test-matches.R",
    "text": "Edit test-matches.R\n🎬 Add a test to check the output of uss_make_matches() is a tibble with expect_true():\n\n\n\ntest_that(\"uss_make_matches works\", {\n\n  # use the function\n  italy <- uss_make_matches(engsoccerdata::italy, \"Italy\")\n\n  expect_true(tibble::is_tibble(italy))\n})\n\n\n\n\nWe use uss_make_matches() and examine the output with an expectation."
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#running-a-test-1",
    "href": "materials/day-1-session-3-testing.html#running-a-test-1",
    "title": "📦 Building tidy tools",
    "section": "Running a test",
    "text": "Running a test\n🎬 Run the test with testthat::test_file()\n\ntestthat::test_file(\"tests/testthat/test-matches.R\")\n\nYou can also use the “Runs Tests” button\n\n══ Testing test-matches.R ══════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ] Done!\n🥳"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#devtoolstest",
    "href": "materials/day-1-session-3-testing.html#devtoolstest",
    "title": "📦 Building tidy tools",
    "section": "devtools::test()",
    "text": "devtools::test()\n🎬 Run all the tests with devtools::test()\n\ndevtools::test()\n\n\n\nℹ Loading ussie\nℹ Testing ussie\n✔ | F W S  OK | Context\n✔ |         1 | matches [0.4s]                                   \n\n══ Results ══════════════════════════════════════════════════════\nDuration: 0.5 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\n🐝 Your tests are the bee's knees 🐝"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#add-an-expectation",
    "href": "materials/day-1-session-3-testing.html#add-an-expectation",
    "title": "📦 Building tidy tools",
    "section": "Add an expectation",
    "text": "Add an expectation\nNow you will test the output of uss_make_matches() to make sure it has columns with the right names expect_named()\n\nwe expect the names to be:\n\n“country”, “tier”, “season”, “date”, “home”, “visitor”, “goals_home”, “goals_visitor”\n\n\n\n🎬 Use expect_named() in test-matches.R to check the column names of italy"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#answer",
    "href": "materials/day-1-session-3-testing.html#answer",
    "title": "📦 Building tidy tools",
    "section": "Answer",
    "text": "Answer\n\n\ntest_that(\"uss_make_matches works\", {\n\n  # use the function\n  italy <- uss_make_matches(engsoccerdata::italy, \"Italy\")\n\n  expect_true(tibble::is_tibble(italy))\n  expect_named(\n    italy,\n    c(\"country\", \"tier\", \"season\", \"date\", \"home\", \"visitor\",\n      \"goals_home\", \"goals_visitor\")\n  )\n})"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#run-the-edited-test",
    "href": "materials/day-1-session-3-testing.html#run-the-edited-test",
    "title": "📦 Building tidy tools",
    "section": "Run the edited test",
    "text": "Run the edited test\n🎬 Run the edited test file\n\n\ntestthat::test_file(\"tests/testthat/test-matches.R\")\n\nOr the “Runs Tests” button\n══ Testing test-matches.R ═════════════════════════════════════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 2 ] Done!"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#section-1",
    "href": "materials/day-1-session-3-testing.html#section-1",
    "title": "📦 Building tidy tools",
    "section": "",
    "text": "devtools::test()\n\n\nℹ Loading ussie\nℹ Testing ussie\n✔ | F W S  OK | Context\n✔ |         2 | matches [0.2s]                                                 \n\n══ Results ════════════════════════════════════════════════════════════════════\nDuration: 0.2 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 2 ]   \n\n🥳"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#add-the-last-expectation",
    "href": "materials/day-1-session-3-testing.html#add-the-last-expectation",
    "title": "📦 Building tidy tools",
    "section": "Add the last expectation",
    "text": "Add the last expectation\nNow check that the country column of the uss_make_matches() output is correct with expect_identical()\n\n🎬 Use expect_identical() in test-matches.R to compare the values in italy$country to “italy”\n\n\n🎬 Run the tests."
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#my-answer",
    "href": "materials/day-1-session-3-testing.html#my-answer",
    "title": "📦 Building tidy tools",
    "section": "My answer",
    "text": "My answer\n\n\ntest_that(\"uss_make_matches works\", {\n\n  # use the function\n  italy <- uss_make_matches(engsoccerdata::italy, \"Italy\")\n\n  expect_true(tibble::is_tibble(italy))\n  expect_named(\n    italy,\n    c(\"country\", \"tier\", \"season\", \"date\", \"home\", \"visitor\",\n      \"goals_home\", \"goals_visitor\")\n  )\n  expect_identical(unique(italy$country), \"Italy\")\n})"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#test-coverage",
    "href": "materials/day-1-session-3-testing.html#test-coverage",
    "title": "📦 Building tidy tools",
    "section": "Test coverage",
    "text": "Test coverage\n…"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#summary",
    "href": "materials/day-1-session-3-testing.html#summary",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\n\n\nAutomated testing means you can systematically check your code still works when adding features\ntestthat “tries to make testing as fun as possible”\nOrganisation: test files\n\nlive in: tests/testthat/\nare named: test-xxxx.R\ncontain: test_that(\"something works\", { *expectations* })\ntests/testthat.R: runs the tests and should not (normally) be edited"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#summary-1",
    "href": "materials/day-1-session-3-testing.html#summary-1",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\n\n\nExpectations have the form expect_zzzz(actual_result, expectation)\nWorkflow\n\nusethis::use_testthat(3) sets up your package to use testthat\nusethis::use_test(xxxx) creates test-xxxx.R\ntestthat::test_file() runs the tests in a test file\ndevtools::test() runs the tests in all the test files"
  },
  {
    "objectID": "materials/day-1-session-3-testing.html#references",
    "href": "materials/day-1-session-3-testing.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt\n\n\n\nWickham, Hadley. 2011. “Testthat: Get Started with Testing” 3. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf.\n\n\nWickham, Hadley, and Jenny Bryan. 2020. R Packages. The work-in-progress 2nd edition. Online. https://r-pkgs.org/index.html."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#learning-objectives",
    "href": "materials/day-2-session-4-miscellany.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning objectives",
    "text": "Learning objectives\nTime permitting\nAt the end of this section you will be able to:\n\naccept a function an argument to a function using a formula (purrr-style)\ncreate an S3 class using {vctrs}\n\nrecognize that implementing a format() method gets you a long way\n\n\nWe will also recap all of today’s material and discuss."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#functions-as-arguments",
    "href": "materials/day-2-session-4-miscellany.html#functions-as-arguments",
    "title": "📦 Building tidy tools",
    "section": "Functions as arguments",
    "text": "Functions as arguments\nUsing functions as arguments is a foundation of functional programming.\nlibrary(\"purrr\")\n\nten <- seq(1, 10)\nsquare <- function(x) {\n  x^2\n}\n\nmap_dbl(ten, square)"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#anonymous-lambda-functions",
    "href": "materials/day-2-session-4-miscellany.html#anonymous-lambda-functions",
    "title": "📦 Building tidy tools",
    "section": "Anonymous (lambda) functions",
    "text": "Anonymous (lambda) functions\nSometimes you want to provide an “on-the-spot” function:\n\nwrite it out the long way:\nmap_dbl(ten, function(x) x^2)\n\n\n\n{purrr} interprets one-sided formula using .x:\nmap_dbl(ten, ~.x^2)\n\n\n\n\nR (> 4.1) provides shorthand:\nmap_dbl(ten, \\(x) x^2)"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#make-purrr-formula-into-function",
    "href": "materials/day-2-session-4-miscellany.html#make-purrr-formula-into-function",
    "title": "📦 Building tidy tools",
    "section": "Make {purrr} formula into function",
    "text": "Make {purrr} formula into function\nmy_function <- function(data, f) {\n  f <- rlang::as_function(f)\n  \n  ...\n}\nNote: we cannot pass the dots here.\n\nThese are equivalent:\nmy_function(ten, function(x) x + 1)\nmy_function(ten, \\(x) x + 1)\nmy_function(ten, ~.x + 1)"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#our-turn-2.4.1",
    "href": "materials/day-2-session-4-miscellany.html#our-turn-2.4.1",
    "title": "📦 Building tidy tools",
    "section": "Our turn \"2.4.1\"",
    "text": "Our turn \"2.4.1\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.4.1\")\n\n\n\nNo new files."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#uss_make_seasons_final",
    "href": "materials/day-2-session-4-miscellany.html#uss_make_seasons_final",
    "title": "📦 Building tidy tools",
    "section": "uss_make_seasons_final()",
    "text": "uss_make_seasons_final()\nitaly_teams_matches <- \n  uss_get_matches(\"italy\") |> \n  uss_make_teams_matches()\nWhat would a season look like if wins were five points?\nitaly_five <-\n  italy_teams_matches |>\n  uss_make_seasons_final(fn_points_per_win = \\(...) 5)"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#seasons.r",
    "href": "materials/day-2-session-4-miscellany.html#seasons.r",
    "title": "📦 Building tidy tools",
    "section": "seasons.R",
    "text": "seasons.R\n\nin seasons_intermediate():\n\n# accept purrr-style anonymous functions\nfn_points_per_win <- \n  rlang::as_function(fn_points_per_win)\n\n\ndevtools::load()\nitaly_five_purrr <-\n  italy_teams_matches |>\n  uss_make_seasons_final(fn_points_per_win = ~5)\nidentical(italy_five, italy_five_purrr)\n\n\n\n\ndocument, devtools::check()"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#s3-class-system",
    "href": "materials/day-2-session-4-miscellany.html#s3-class-system",
    "title": "📦 Building tidy tools",
    "section": "S3 class system",
    "text": "S3 class system\nThere have been a lot of class systems implemented in R:\n\nS3, S4, R6, …\n\n\n\nand now R7 (Hadley’s talk Thursday afternoon)\n\n\n\nFor now, S3 remains the simplest thing that works:\n\ndeclare that an object has a class\ndefine methods for generic functions, specific to that class, e.g. format()"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#vctrs-package",
    "href": "materials/day-2-session-4-miscellany.html#vctrs-package",
    "title": "📦 Building tidy tools",
    "section": "{vctrs} package",
    "text": "{vctrs} package\n\ndesigned to help you construct S3 classes:\n\nespecially in the context of a column of a data frame\n\n\n\n\ncli::cli_abort() creates an S3 error condition:\n\nnot quite the same thing\nbut the same idea: let’s make it a little easier to manage"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#our-turn-2.4.2",
    "href": "materials/day-2-session-4-miscellany.html#our-turn-2.4.2",
    "title": "📦 Building tidy tools",
    "section": "Our turn \"2.4.2\"",
    "text": "Our turn \"2.4.2\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.4.2\")\n\n\n\nGet new files, btt22::btt_get(\"2.4.2\"):\n\nresult.R\ntest-result.R\n\n\n\n\nusethis::use_package(\"glue\")\nusethis::use_package(\"vctrs\")\nadd #' @import vctrs to ussie-package.R."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#what-problem-are-we-solving",
    "href": "materials/day-2-session-4-miscellany.html#what-problem-are-we-solving",
    "title": "📦 Building tidy tools",
    "section": "What problem are we solving?",
    "text": "What problem are we solving?\nA result displays two sets of information, according to team:\n\ngoals-for, goals-against: essential information\noutcome (win, loss, draw): based on goals for, against\n\n\nOur result structure should:\n\nstore essential information, e.g.:\n\ngoals_for = 3\ngoals_against = 2\n\ndisplay outcome with goals, e.g.: W 3-2."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#low-level-constructor",
    "href": "materials/day-2-session-4-miscellany.html#low-level-constructor",
    "title": "📦 Building tidy tools",
    "section": "Low-level constructor",
    "text": "Low-level constructor\nnew_result <- function(goals_for = integer(), goals_against = integer()) {\n\n  # validate\n  vec_assert(goals_for, integer())\n  vec_assert(goals_against, integer(), size = length(goals_for))\n  \n  # construct rcrd class, using vctrs::new_rcrd()\n  new_rcrd(\n    list(goals_for = goals_for, goals_against = goals_against),\n    class = \"ussie_result\"\n  )\n}\nrcrd class is like a little data-frame."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#high-level-constructor",
    "href": "materials/day-2-session-4-miscellany.html#high-level-constructor",
    "title": "📦 Building tidy tools",
    "section": "High-level constructor",
    "text": "High-level constructor\n#' @export\nuss_result <- function(goals_for = integer(), goals_against = integer()) {\n\n  # coerce to integer, lets us accept integer-ish arguments\n  goals_for <- vec_cast(goals_for, to = integer())\n  goals_against <- vec_cast(goals_against, to = integer())\n  \n  # call low-level constructor\n  new_result(goals_for, goals_against)\n}\nThis is what users “see” and use."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#formatter",
    "href": "materials/day-2-session-4-miscellany.html#formatter",
    "title": "📦 Building tidy tools",
    "section": "Formatter",
    "text": "Formatter\n#' @export\nformat.ussie_result <- function(x, ...) {\n  \n  # field() is a vcrts function to extract a field from a rcrd\n  goals_for <- field(x, \"goals_for\")\n  goals_against <- field(x, \"goals_against\")\n  \n  outcome <- dplyr::case_when(...)\n  \n  # compose output\n  out <- glue::glue(\"{outcome} {goals_for}-{goals_against}\")\n  as.character(out)\n}"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#lets-see-this-in-action",
    "href": "materials/day-2-session-4-miscellany.html#lets-see-this-in-action",
    "title": "📦 Building tidy tools",
    "section": "Let’s see this in action",
    "text": "Let’s see this in action\n\ndevtools::document()\ndevtools::load()\n\n\nuss_result(3, 2)\n\n\nuss_get_matches(\"italy\") |>\n  uss_make_teams_matches() |>\n  dplyr::mutate(\n    result = uss_result(goals_for, goals_against)\n  )"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#abbreviators",
    "href": "materials/day-2-session-4-miscellany.html#abbreviators",
    "title": "📦 Building tidy tools",
    "section": "Abbreviators",
    "text": "Abbreviators\nThese control how the class name is displayed when printing:\n#' @export\nvec_ptype_abbr.ussie_result <- \n  function(x, ...) \"rslt\" \n\n#' @export\nvec_ptype_full.ussie_result <- \n  function(x, ...) \"result\""
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#recap-design",
    "href": "materials/day-2-session-4-miscellany.html#recap-design",
    "title": "📦 Building tidy tools",
    "section": "Recap: Design",
    "text": "Recap: Design\n\nNaming: be consistent, concise, yet evocative.\nArgument order: data, descriptors, dots, details.\nReturn value type: be consistent, predictable.\nEasy to remember data (first) argument and return value:\n\neasy to use pipe, |>.\n\nBe mindful of side effects."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#recap-side-effects",
    "href": "materials/day-2-session-4-miscellany.html#recap-side-effects",
    "title": "📦 Building tidy tools",
    "section": "Recap: Side-effects",
    "text": "Recap: Side-effects\nThe most-common side-effect is an error. Good design:\n\nsimple (as possible) predicate\nclear mesage\nadd a class using naming convention, and additional information\n\nUse snapshot tests to capture side-effects.\n\nbe very careful when accepting changes to snapshots.\n\nUse withr::local_*() functions to “leave no footprints”."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#recap-tidy-eval",
    "href": "materials/day-2-session-4-miscellany.html#recap-tidy-eval",
    "title": "📦 Building tidy tools",
    "section": "Recap: Tidy eval",
    "text": "Recap: Tidy eval\nThere are a lot of tidy-eval tools:\n\nknow if you are using a data-masking or tidy-select function.\n\n\n\nto splice a list (or vector) into dynamic-dots, use !!!\n\n\n\n\nFor data-masking functions:\n\nbe specific, use .data, .env pronouns.\nto use tidy-select syntax, use dplyr::across().\nto move a bunch of arguments, pass the dots, ...\nto interpolate a single argument, use {{}}."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#recap-misc.",
    "href": "materials/day-2-session-4-miscellany.html#recap-misc.",
    "title": "📦 Building tidy tools",
    "section": "Recap: Misc.",
    "text": "Recap: Misc.\nAnonymous (use-once) functions can be handy:\n\nuse rlang::as_function() to accept purrr-style formula-functions, e.g. ~.x + 1\n\nUse {vctrs} package to help build and manage S3 classes."
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#recap",
    "href": "materials/day-2-session-4-miscellany.html#recap",
    "title": "📦 Building tidy tools",
    "section": "Recap",
    "text": "Recap\nIn Ian’s opinion, the tidyverse succeeds because it helps you build a mental model for composing functions to solve your problem. It does this by providing:\n\nconsistent naming of functions, arguments\nfocus on first argument, return value: supports |>\nconsistent implementation of non-standard evaluation\nmore-and-more informative error-messages"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#un-recap",
    "href": "materials/day-2-session-4-miscellany.html#un-recap",
    "title": "📦 Building tidy tools",
    "section": "Un-recap",
    "text": "Un-recap\nWe did not cover how to manage change.\nChange is a necessary (and frustrating) part of success:\n\n{plyr} -> {dplyr}\n{reshape} -> {reshape2} -> {tidyr}\n\n\nDifferent levels of change:\n\ndeprecating functions, arguments\nbreaking changes\nused to be: add-a-2, becoming: editions"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#if-you-remember-one-thing",
    "href": "materials/day-2-session-4-miscellany.html#if-you-remember-one-thing",
    "title": "📦 Building tidy tools",
    "section": "If you remember one thing…",
    "text": "If you remember one thing…\nDistinguish pure functions from functions that use side effects.\nPure functions:\n\nuse only the values of the arguments\nchange only the return value\nadd <- function(x, y) {\n  x + y\n}\n\nSide effects use or change something else in the universe:\n\ne.g.: read a file, print to screen"
  },
  {
    "objectID": "materials/day-2-session-4-miscellany.html#references",
    "href": "materials/day-2-session-4-miscellany.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#learning-objectives",
    "href": "materials/day-2-session-3-tidy-eval.html#learning-objectives",
    "title": "📦 Building tidy tools",
    "section": "Learning objectives",
    "text": "Learning objectives\nAt the end of this section you will be able to:\n\nbuild functions that call tidyverse functions, using bare-name arguments:\n\ndesigned for interactive use, i.e. like dplyr::filter()\n\nunderstand terms: data masking, tidy select, dynamic dots\nrecognize other ways to use tidy eval:\n\nfunctions that call tidyverse functions using string-based arguments, i.e. for use with Shiny.\ncorrespondence with techniques used for bare-name arguments."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#motivation-for-tidy-eval",
    "href": "materials/day-2-session-3-tidy-eval.html#motivation-for-tidy-eval",
    "title": "📦 Building tidy tools",
    "section": "Motivation for tidy eval",
    "text": "Motivation for tidy eval\nTidy eval (and non-standard evaluation generally in R) exists so that we can refer to data columns using bare names.\ndplyr::filter(mtcars, cyl == 4)\n\n# python, using pandas\nmtcars.query('cyl == 4')\n\n\n\nIt makes things easier if you are working interactively.\nIt makes things more interesting if you are writing functions.\n\n\n\nWelcome to more interesting."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#families-of-tidy-eval-arguments",
    "href": "materials/day-2-session-3-tidy-eval.html#families-of-tidy-eval-arguments",
    "title": "📦 Building tidy tools",
    "section": "Families of tidy-eval arguments",
    "text": "Families of tidy-eval arguments\nThere are two families of tidy-eval arguments:\n\n\ndata-masking: evaluate variables in context of data frame\nmtcars |>\n  dplyr::mutate(wt_kg = wt * 1000 / 2.2)\n\n\n\n\ntidy-select: specify columns within a data frame\nmtcars |>\n  dplyr::select(starts_with(\"w\"))"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#ways-to-express-tidy-eval",
    "href": "materials/day-2-session-3-tidy-eval.html#ways-to-express-tidy-eval",
    "title": "📦 Building tidy tools",
    "section": "Ways to express tidy-eval",
    "text": "Ways to express tidy-eval\n\n\nusing bare names, what we do in interactive programming:\nmtcars |>\n  dplyr::mutate(wt_kg = wt * 1000 / 2.2)\n\n\n\n\nusing strings, useful for Shiny :\nmtcars |>\n  dplyr::mutate(\"wt_kg\" := .data[[\"wt\"]] * 1000 / 2.2)\n\n\n\nHere, we focus mostly on interactive programming."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#goal",
    "href": "materials/day-2-session-3-tidy-eval.html#goal",
    "title": "📦 Building tidy tools",
    "section": "Goal",
    "text": "Goal\nWrite functions that:\n\ncall tidyverse functions, e.g. dplyr::filter()\n“look and feel” like tidyverse functions:\n\nyour users can call using bare names\n\n\n\nOut of scope:\n\nunderlying theory of quasiquotation, i.e. rlang::quo(), rlang::enquo(), rlang::eval_tidy()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#pass-the-dots",
    "href": "materials/day-2-session-3-tidy-eval.html#pass-the-dots",
    "title": "📦 Building tidy tools",
    "section": "Pass the dots",
    "text": "Pass the dots\nThis is the simplest possible solution.\n\n\nIf the tidyverse function you’re using takes ... as an argument,\n\n\n\n\nand that’s what you want to pass along,\n\n\n\nthen you can pass the dots.\nmy_select <- function(.data, ...) {\n  dplyr::select(.data, ...)\n}"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.1",
    "href": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.1",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.3.1\"",
    "text": "Your turn \"2.3.1\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.1\")\n\n\n\nNo new files."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#pass-the-dots-to-filter-results",
    "href": "materials/day-2-session-3-tidy-eval.html#pass-the-dots-to-filter-results",
    "title": "📦 Building tidy tools",
    "section": "Pass the dots to filter() results",
    "text": "Pass the dots to filter() results\nIn uss_get_matches():\n\nAdd ... to the formal arguments.\nPass the dots to dplyr::filter().\nDocument:\n\nuse #' @inheritParams dplyr::filter\nadd example\nadd to package vignette\n\nAdd test (usethis::use_test())\ndevtools::check()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#pronouns-.data-.env",
    "href": "materials/day-2-session-3-tidy-eval.html#pronouns-.data-.env",
    "title": "📦 Building tidy tools",
    "section": "Pronouns: .data, .env",
    "text": "Pronouns: .data, .env\ndplyr::filter(mtcars, cyl == 4) |> nrow()\n\n[1] 11\n\n\n\ncyl <- 4\ndplyr::filter(mtcars, cyl == cyl) |> nrow()\n\n\n[1] 32\n\n\n\nlibrary(\"rlang\")\ncyl <- 4\ndplyr::filter(mtcars, .data$cyl == .env$cyl) |> nrow()\n\n\n[1] 11"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#pronouns",
    "href": "materials/day-2-session-3-tidy-eval.html#pronouns",
    "title": "📦 Building tidy tools",
    "section": "Pronouns",
    "text": "Pronouns\nThe .data and .env pronouns are provided by {rlang}.\n\nFor data-masking functions, make explicit how to evaluate variables.\n\n\nTo use them in your package:\n# we have .data already\nusethis::use_import_from(\"rlang\", c(\".data\", \".env\"))"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.2",
    "href": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.2",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.3.2\"",
    "text": "Your turn \"2.3.2\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.2\")\n\n\n\nGet new files, btt22::btt_get(\"2.3.2\"):\n\nteams-matches.R\ntest-teams-matches.R\n\nGo through what code does.\n\n\nIf you have not already:\nusethis::use_import_from(\"rlang\", \".env\")"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#use-.env-pronoun",
    "href": "materials/day-2-session-3-tidy-eval.html#use-.env-pronoun",
    "title": "📦 Building tidy tools",
    "section": "Use .env pronoun",
    "text": "Use .env pronoun\nat_home <- FALSE\n\nteams_matches_visitor <-\n  data_matches |>\n  dplyr::rename(\n    team = \"visitor\",\n    opponent = \"home\",\n    goals_against = \"goals_home\",\n    goals_for = \"goals_visitor\"\n  ) |>\n  dplyr::mutate(at_home = FALSE)\n\ninstead of FALSE, use .env$at_home.\ndevtools::check()."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#splicing",
    "href": "materials/day-2-session-3-tidy-eval.html#splicing",
    "title": "📦 Building tidy tools",
    "section": "Splicing: !!!",
    "text": "Splicing: !!!\nUsed to splice a list or vector into a ... argument.\n\nIf you know JavaScript, it’s like the destructuring operator.\n\n\nIt works only with dynamic dots (a tidyverse construct).\n\n\nmtcars |>\n  dplyr::rename(mpg = \"new_mpg\", cyl = \"new_cyl\")\n\n\nnew_names <- c(mpg = \"new_mpg\", cyl = \"new_cyl\")\n\nmtcars |>\n  dplyr::rename(!!!new_names)\n\n\nRemember:!!! reflects ..."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.3",
    "href": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.3",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.3.3\"",
    "text": "Your turn \"2.3.3\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.3\")\n\n\n\nNo new files."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#splice-renaming",
    "href": "materials/day-2-session-3-tidy-eval.html#splice-renaming",
    "title": "📦 Building tidy tools",
    "section": "Splice renaming",
    "text": "Splice renaming\nteams_matches_home <-\n  data_matches |>\n  dplyr::rename(\n    team = \"home\",\n    opponent = \"visitor\",\n    goals_for = \"goals_home\",\n    goals_against = \"goals_visitor\"\n  ) |>\n  dplyr::mutate(at_home = TRUE)\n\nlook at rename_home() and rename_visitor().\nUse !!! with teams_matches_home(), _visitor().\ndevtools::check()."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#new-columns",
    "href": "materials/day-2-session-3-tidy-eval.html#new-columns",
    "title": "📦 Building tidy tools",
    "section": "New columns",
    "text": "New columns\nWith dynamic dots you can name new columns using variables.\n\nprefix <- \"new\"\n\nmtcars |>\n  dplyr::rename(\"{prefix}_mpg\" := .data$mpg)\n\n\nTwo things to keep in mind:\n\nleft side of expression is a {glue}-enabled string.\noperator is :=, not =.\n\n\n\nTo use in your package:\nusethis::use_import_from(\"rlang\", \":=\")"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.4",
    "href": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.4",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.3.4\"",
    "text": "Your turn \"2.3.4\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.4\")\n\n\n\nNo new files."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#naming-columns",
    "href": "materials/day-2-session-3-tidy-eval.html#naming-columns",
    "title": "📦 Building tidy tools",
    "section": "Naming columns",
    "text": "Naming columns\nname_of_at_home <- \"at_home\"\nteams_matches_visitor <-\n  data_matches |>\n  dplyr::rename(!!!rename_visitor()) |>\n  dplyr::mutate(at_home = FALSE)\n\nuse name_of_at_home to name column in mutate()\ndevtools::check()\n\nRemember:\n\nleft side of expression is a {glue}-enabled string\noperator is :=, not ="
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#dplyracross-super-useful",
    "href": "materials/day-2-session-3-tidy-eval.html#dplyracross-super-useful",
    "title": "📦 Building tidy tools",
    "section": "dplyr::across(): super useful",
    "text": "dplyr::across(): super useful\n\nused inside data-masking verbs, e.g. summarise()\nspecify:\n\nwhich columns to consider, using tidy-select\nwhat function(s), if any, to apply\n\n\n\nmtcars |>\n  dplyr::group_by(dplyr::across(\"cyl\")) |>\n  dplyr::summarise(\n    dplyr::across(c(\"mpg\", \"disp\"), mean)\n  )"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#tidy-select-and-ambiguity",
    "href": "materials/day-2-session-3-tidy-eval.html#tidy-select-and-ambiguity",
    "title": "📦 Building tidy tools",
    "section": "Tidy-select and ambiguity",
    "text": "Tidy-select and ambiguity\nlibrary(\"dplyr\")\n\nmtcars |> select(cyl) |> glimpse()\n\nplaceholder <- c(\"wt\", \"mpg\")\nmtcars |> select(placeholder) |> glimpse()\n\n\ncyl <- c(\"wt\", \"mpg\")\nmtcars |> select(cyl) |> glimpse()\n\n\nmtcars |> select(all_of(cyl)) |> glimpse()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#all_of-any_of",
    "href": "materials/day-2-session-3-tidy-eval.html#all_of-any_of",
    "title": "📦 Building tidy tools",
    "section": "all_of(), any_of()",
    "text": "all_of(), any_of()\nExported by {dplyr}; part of {tidyselect}\nUsed to disambiguate external- vector of column names:\nplaceholder <- c(\"wt\", \"mpg\", \"not_in_mtcars\")\n\nall_of() is strict:\nmtcars |> select(all_of(placeholder)) |> glimpse()\n\n\nany_of() is permissive:\nmtcars |> select(any_of(placeholder)) |> glimpse()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#our-turn-2.3.5",
    "href": "materials/day-2-session-3-tidy-eval.html#our-turn-2.3.5",
    "title": "📦 Building tidy tools",
    "section": "Our turn \"2.3.5\"",
    "text": "Our turn \"2.3.5\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.5\")\n\n\n\nNo new files."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#uss_make_teams_matches",
    "href": "materials/day-2-session-3-tidy-eval.html#uss_make_teams_matches",
    "title": "📦 Building tidy tools",
    "section": "uss_make_teams_matches()",
    "text": "uss_make_teams_matches()\nLet’s add some code near the end to arrange the rows:\nresult <-\n  teams_matches_home |>\n  dplyr::bind_rows(teams_matches_visitor) |>\n  dplyr::select(cols_teams_matches()) |>\n  dplyr::arrange(\n    dplyr::across(\n      c(\"country\", \"tier\", \"season\", \"team\", \"date\")\n    )\n  )\n\nNot using variable-names in tidy-select that could be confused for column-names; we don’t need all_of()."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#accepting-new-snapshot",
    "href": "materials/day-2-session-3-tidy-eval.html#accepting-new-snapshot",
    "title": "📦 Building tidy tools",
    "section": "Accepting new snapshot",
    "text": "Accepting new snapshot\n\ndevtools::test() changes the snapshot test\n\n\n\nsnapshot_review('teams-matches')\n\n\n\n\n\n\n\n\n\n\naccept the change\ndevtools::check()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.6",
    "href": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.6",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.3.6\"",
    "text": "Your turn \"2.3.6\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.6\")\n\n\n\nGet new files, btt22::btt_get(\"2.3.6\"):\n\npoints.R\nseasons.R\ntest-points.R\ntest-seasons.R\n\nGo through what code does."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#uss_make_seasons_final",
    "href": "materials/day-2-session-3-tidy-eval.html#uss_make_seasons_final",
    "title": "📦 Building tidy tools",
    "section": "uss_make_seasons_final()",
    "text": "uss_make_seasons_final()\n\nsame args as uss_make_seasons_cumulative()\n#' @rdname uss_make_seasons_cumulative\n#' @export\nsame validation, test by uncommenting\nuse dplyr::summarise(), vs. dplyr::mutate()\nsum quantities, rather than cumsum\nsummarise() the date differently\nadd example, add to vignette\ndevtools::check()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#curly-curly",
    "href": "materials/day-2-session-3-tidy-eval.html#curly-curly",
    "title": "📦 Building tidy tools",
    "section": "Curly-curly: {{}}",
    "text": "Curly-curly: {{}}\nglue lets you interpolate strings:\ngreet <- function(name) {\n  glue::glue(\"Hello {name}\")\n}\ngreet(\"there\")\n\nTidy eval lets you interpolate arguments:\nmutate_greet <- function(.data, greeting) {\n  .data |>\n    dplyr::mutate(greeting = {{ greeting }})\n}"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#try-out-greeting-functions",
    "href": "materials/day-2-session-3-tidy-eval.html#try-out-greeting-functions",
    "title": "📦 Building tidy tools",
    "section": "Try out greeting functions",
    "text": "Try out greeting functions\nlibrary(\"palmerpenguins\")\nmutate_greet(penguins, species)\n\nmutate_greet(penguins, paste(species, island))\n\n\nmutate_greet(\n  penguins, \n  paste(species, island) |> greet()\n)"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#curly-curly-revisited",
    "href": "materials/day-2-session-3-tidy-eval.html#curly-curly-revisited",
    "title": "📦 Building tidy tools",
    "section": "Curly-curly, revisited",
    "text": "Curly-curly, revisited\nmutate_greet <- function(.data, greeting) {\n  .data |>\n    dplyr::mutate(greeting = {{ greeting }})\n}\n{{}}:\n\nfreezes the expression, capturing context\ndelays evaluation\nfunction you call must be capable\ntidyverse data-masking and tidy-select functions are capable"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.7",
    "href": "materials/day-2-session-3-tidy-eval.html#your-turn-2.3.7",
    "title": "📦 Building tidy tools",
    "section": "Your turn \"2.3.7\"",
    "text": "Your turn \"2.3.7\"\n\n\nOnly if needed, btt22::btt_reset_hard(\"2.3.7\")\n\n\n\nGet new files, btt22::btt_get(\"2.3.7\"):\n\npoints.R, seasons.R\ntest-points.R, test-seasons.R\n\nusethis::use_package(\"ggplot2\")\nGo through what code does, esp. snapshot function."
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#uss_plot_seasons_tiers",
    "href": "materials/day-2-session-3-tidy-eval.html#uss_plot_seasons_tiers",
    "title": "📦 Building tidy tools",
    "section": "uss_plot_seasons_tiers()",
    "text": "uss_plot_seasons_tiers()\nAdd argument aes_y to function:\n\nmake default value .data$wins\ndocument: #' @param aes_y\nin function, modify aes(y = .data$wins) using {{}}\nuncomment test, devtools::test()\nadd to package vignette\ndevtools::check()"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#our-turn",
    "href": "materials/day-2-session-3-tidy-eval.html#our-turn",
    "title": "📦 Building tidy tools",
    "section": "Our turn",
    "text": "Our turn\nIn uss_plot_seasons_tiers():\nggplot2::geom_point(\n  ggplot2::aes(\n    x = .data$season,\n    y = {{ aes_y }},\n  ),\n  color = \"#333333\" # use something like #111111\n) +\n\n\ndevtools::test()\ntestthat::snapshot_review('plot/')\naccept changes (or not), change back (or not)"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#summary",
    "href": "materials/day-2-session-3-tidy-eval.html#summary",
    "title": "📦 Building tidy tools",
    "section": "Summary",
    "text": "Summary\nThere are a lot of tidy-eval tools:\n\nknow if you are using a data-masking or tidy-select function.\n\n\n\ndata-masking function using tidy-select syntax: across()\n\n\n\n\nto move a bunch of arguments, pass the dots, ...\n\n\n\n\nto splice a list (or vector) into dynamic-dots, use !!!\n\n\n\n\nto interpolate a single argument, use {{}}"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#summary-disambiguation",
    "href": "materials/day-2-session-3-tidy-eval.html#summary-disambiguation",
    "title": "📦 Building tidy tools",
    "section": "Summary: disambiguation",
    "text": "Summary: disambiguation\nFor data-masking functions, use .data, .env pronouns:\nlibrary(\"dplyr\")\n\ncyl <- 4\nmtcars |> filter(.data$cyl == .env$cyl) \n\nFor tidy-select functions, use all_of(), any_of():\ncyl <- c(\"mpg\", \"wt\")\nmtcars |> select(all_of(cyl))"
  },
  {
    "objectID": "materials/day-2-session-3-tidy-eval.html#references",
    "href": "materials/day-2-session-3-tidy-eval.html#references",
    "title": "📦 Building tidy tools",
    "section": "References",
    "text": "References\n\n\nhttps://rstd.io/btt"
  },
  {
    "objectID": "pre-reqs.html",
    "href": "pre-reqs.html",
    "title": "Prerequisites",
    "section": "",
    "text": "You will need"
  },
  {
    "objectID": "pre-reqs.html#install-r-and-rstudio",
    "href": "pre-reqs.html#install-r-and-rstudio",
    "title": "Prerequisites",
    "section": "Install R and RStudio",
    "text": "Install R and RStudio\nYou will need:\n\nR 4.x. Version 3.6.x will likely be fine but we recommend that you install the latest versions if possible.\nRStudio 2022.02.1 or above\n\n\nInstalling R\nDownload the pre-compiled binary for your OS from https://cloud.r-project.org/ and install.\n\nFor Windows\nClick “Download R for Windows”, then “base”, then “Download R #.#.# for Windows”. This will download an .exe file; once downloaded, open to start the installation. If you do not have administrator rights, the installer will default to install in your Documents folder - if you prefer, you can change the location to another folder that you have write access to.\n\n\nFor Mac\nClick “Download R for (Mac) OS X”, then “R-#.#.#.pkg” to download the installer. Run the installer to complete installation.\n\n\nFor Linux\nClick “Download R for Linux”. Instructions on installing are given for Debian, Redhat, Suse and Ubuntu distributions. Where there is a choice, install both r-base and r-base-dev.\n\n\n\nInstalling R Studio\nDownloads are available from https://www.rstudio.com/products/rstudio/download/ (scroll to the end of the page to see the downloads). You want RStudio Desktop (Open Source License).\n\nFor Windows with no admin rights\nDownload the .zip source archive under “Zip/Tarballs”. Extract the files to a folder where you have write access, e.g. C:\\Users\\username\\RStudio. In this folder, open the bin directory and find the RStudio program: it is named rstudio.exe, but the file extension will typically be hidden, so look for rstudio. Right-click this executable to create a desktop shortcut. Double-click the executable or use the shortcut to open.\n\n\nFor all other operating systems\nDownload the relevant installer for your OS listed under “Installers for Supported Platforms”. Run the installer to complete installation."
  },
  {
    "objectID": "pre-reqs.html#install-r-package-development-toolchain",
    "href": "pre-reqs.html#install-r-package-development-toolchain",
    "title": "Prerequisites",
    "section": "Install R package development toolchain",
    "text": "Install R package development toolchain\n\nFor Windows with no admin rights\nDownload the latest (recommended) Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/. Run the installer keeping the default settings.\n\n\nFor Windows with admin rights\nDownload the latest (recommended) Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/. Run the installer making the following selections: keep the default settings for the installation location and components to install; check the box to add rtools to the system PATH.\n\n\nFor Mac\nInstall XCode. Either:\n\nDownload and install XCode from the Mac AppStore: http://itunes.apple.com/us/app/xcode/id497799835?mt=12\nWithin XCode go to Preferences : Downloads and install the Command Line Tools\n\nOr for a smaller download size:\n\nRegister as an Apple Developer (free) here: https://developer.apple.com/programs/register/\nDownload the Command Line Tools for XCode appropriate for the version of OS X you are running from here: https://developer.apple.com/downloads/\n\n\n\nFor Linux\nIf you installed r-base-dev, when installing R, you should have all you need to build packages from source. Otherwise return to the instructions for installing R for your distribution and follow the instructions there to install the additional tools."
  },
  {
    "objectID": "pre-reqs.html#packages",
    "href": "pre-reqs.html#packages",
    "title": "Prerequisites",
    "section": "Install the devtools and btt22 packages",
    "text": "Install the devtools and btt22 packages\nThe aim of devtools (Wickham et al. 2021) is to make package development easier by providing R functions that simplify and expedite common tasks. The R Packages (Wickham and Bryan 2020) book and the Building Tidy Tools workshop are based on a devtools workflow.\nInstall devtools:\n\ninstall.packages(\"devtools\")\n\nAfter installing the R package development toolchain and devtools, you can verify your system is set up by running:\n\ndevtools::has_devel()\n\nYour system is ready to build packages!\n\n\nThe central project for the Building Tidy Tools 2022 workshop is you will build a package called ussie, and populate it with functions. The goal of btt22 is to help you build the ussie package. Its two main purposes are:\n\ninstalling btt22 means you will have all the packages you need for the workshop and,\nbtt22 has functions that allow you to template code for workshop exercises and to reset the state of ussie to a particular point in the workshop if things go wrong.\n\nWe recommend you install btt22 no sooner than a week before the workshop.\nInstall btt22 from GitHub:\n\ndevtools::install_github(\"rstudio-conf-2022/btt22\")"
  },
  {
    "objectID": "pre-reqs.html#git",
    "href": "pre-reqs.html#git",
    "title": "Prerequisites",
    "section": "Git",
    "text": "Git\n\nWindows\nCheck if Git is installed by running which git in the Terminal\nIf which git didn’t find Git installed:\n\nDownload and install from https://git-scm.com/downloads\nKeep all the default settings\n\nIf the installer hangs with the progress bar at 100%, close the installer with Task Manager (press Ctrl + Alt + Delete; select Task Manager; find Git for Windows installer and close).\n\nOpen RStudio. In the menus go to Tools > Global Options > Git/SVN.\nCheck RStudio has found git under “Git executable:”\n\nYou may need to click Browse and find the git executable.\nIt may be under C:\\Users\\username\\AppData\\Local\\Programs\\Git\\ - remember if file extensions are hidden it will show as git rather than git.exe. Restart RStudio before trying to use git.\n\n\n\n\nMac\nCheck if Git is installed by running which git in the Terminal\nIf asked to install the Xcode command line tools, say yes!\nIf which git didn’t find Git installed, and if you weren’t prompted to install it, run the following in the Terminal: xcode-select --install\n\nOther options for installing Git on a Mac\n\nRecommended if you don’t want to use the Terminal:\n\nDownload and install from https://git-scm.com/downloads\nIf you’re developing version controlled packages, you should get to using the Terminal\n\nRecommended if you do lots of scientific computing and using software that needs to be installed and updated regularly:\n\nYou might first need to install Homebrew if this is your first time using it, see brew.sh for instructions\nUse Homebrew: Run the following in the Terminal: brew install git"
  },
  {
    "objectID": "pre-reqs.html#github-account",
    "href": "pre-reqs.html#github-account",
    "title": "Prerequisites",
    "section": "GitHub account",
    "text": "GitHub account\nRegister a GitHub account at github.com.\n\nIncorporate your actual name!\nReuse your username from other contexts.\nPick a username you will be comfortable revealing to your future boss.\nShorter is better than longer.\nBe as unique as possible in as few characters as possible.\nMake it timeless.\nAvoid words laden with special meaning in programming.\nUse all lower case letters.\n\nAdvice and more information from Happy Git with R (Bryan and Hester, n.d.)"
  },
  {
    "objectID": "pre-reqs.html#check-link-between-rstudio-and-github",
    "href": "pre-reqs.html#check-link-between-rstudio-and-github",
    "title": "Prerequisites",
    "section": "Check link between RStudio and GitHub",
    "text": "Check link between RStudio and GitHub\nConfigure your user.name and user.email for git in RStudio with:\n\nusethis::use_git_config(\n  user.name = \"Jane Doe\",          # actual first and last name\n  user.email = \"jane@example.com\"  # email associated with GitHub account\n  )\n\nCommunicating with GitHub will require authentication. Instead of typing in your username and password each time, use a PAT (personal access token)\nCreate a PAT with:\n\nusethis::create_github_token()\n\n\nGive the token a descriptive name\nCopy and also store this token somewhere (you won’t be able to see it again!)\n\nNow put your PAT into the Git credential store with:\n\ngitcreds::gitcreds_set()\n\n\nYou may need to install gitcreds (Csárdi 2020).\n\nYou can check your set up by asking for a “situation report”\n\nusethis::git_sitrep()\n\n\nPersonal Access Token\nThe Managing Git(Hub) Credentials vignette in the usethis (Wickham, Bryan, and Barrett 2022)package has all the details on PATs!"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "schedule",
    "section": "",
    "text": "Day 1\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 10:30\nSession 1: Introduction and the whole game\n\n\n10:30 - 11:00\nCoffee break\n\n\n11:00 - 12:30\nSession 2: Documentation - Minimal\n\n\n12:30 - 13:30\nLunch break\n\n\n13:30 - 15:00\nSession 3: Unit testing\n\n\n15:00 - 15:30\nCoffee break\n\n\n15:30 - 17:00\nSession 4: Documentation - Sharing\n\n\n\n\n\nDay 2\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 10:30\nSession 1: Function design\n\n\n10:30 - 11:00\nCoffee break\n\n\n11:00 - 12:30\nSession 2: Managing Side Effects\n\n\n12:30 - 13:30\nLunch break\n\n\n13:30 - 15:00\nSession 3: Tidy eval\n\n\n15:00 - 15:30\nCoffee break\n\n\n15:30 - 17:00\nSession 4: Miscellany"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Building tidy tools",
    "section": "",
    "text": "🗓 July 25 and 26, 2022\n⏰ 9:00 - 17:00\n🏨 [ADD ROOM]\n✍️ rstd.io/conf"
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Building tidy tools",
    "section": "Overview",
    "text": "Overview\nThis is a two-day, hands-on workshop for those who have embraced the tidyverse and want to build their own packages. We’ll discuss how functions present to the user, functional programming tools, and Object-oriented programming with S3 (R’s simplest system of OOP). We will also cover the tidy eval system which allows you to use tidyverse grammar in your functions.\n\nLearn efficient workflows for developing high-quality R functions, using the set of conventions codified by a package. You’ll also learn workflows for unit testing, which helps ensure that your functions do exactly what you think they do.\nMaster the art of writing functions that do one thing well and can be fluently combined together to solve more complex problems. We’ll cover common function writing pitfalls and how to avoid them.\nLearn how to write collections of functions that work well together, and adhere to existing conventions so they’re easy to pick up for newcomers.\n\nYou should take this workshop if you have experience programming in R and want to learn how to tackle larger scale problems. You’ll get the most from it if you’re already familiar with functions and are comfortable with R’s basic data structures (vectors, matrices, arrays, lists, and data frames)."
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "Building tidy tools",
    "section": "Learning objectives",
    "text": "Learning objectives\n[ADD AN ITEMIZED LIST OF LEARNING OBJECTIVES.]"
  },
  {
    "objectID": "index.html#is-this-course-for-me",
    "href": "index.html#is-this-course-for-me",
    "title": "Building tidy tools",
    "section": "Is this course for me?",
    "text": "Is this course for me?\nHave you written a few of your own R functions? Are you ready to start sharing your code (or data) through R packages? Are you curious what you can do to make your first R packages easy for your users to use, and for you to maintain?"
  },
  {
    "objectID": "index.html#prework",
    "href": "index.html#prework",
    "title": "Building tidy tools",
    "section": "Prework",
    "text": "Prework\nTo get the most out of this workshop you will need a laptop with the following installed:\n\nR and RStudio\nR package development toolchain: Rtools(windows) or XCode (mac) or r-base-dev\nThe following packages: devtools and TO ADD WHEN FINALISED\nGit\nGitHub account\nGitHub to be linked to RStudio\n\nDetailed instructions for installing these are covered in Prerequisites"
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Building tidy tools",
    "section": "Instructors",
    "text": "Instructors\nEmma Rand is a Senior Lecturer (Associate Prof) in the Department of Biology at the University of York where she specialises in teaching data science and reproducibility, particularly to those who do not see themselves as programmers. She leads a UKRI funded project called Cloud-SPAN which trains researchers in cloud-based high performance computing for ’omics. She is a Software Sustainability Institute Fellow, a Teaching team lead for R Forwards and delivers data science training for the Royal Society of Biology and the Biochemical Society.\nIan Lyttle is a Data Scientist at Schneider Electric. His technical interests include visualization, interactivity, and functional programming. He is a community contributor to tidyverse and r-lib, and maintains CRAN packages including vegawidget and boxr. He has delivered tutorials on a variety of R topics at UseR!, Uncoast Unconf, and the Iowa State University Graphics Group."
  }
]